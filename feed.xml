<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mleek's blog</title>
    <description>Mleek's blog_ study note &amp; daily life
</description>
    <link>http://lee95292.github.io/</link>
    <atom:link href="http://lee95292.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 25 Apr 2020 17:58:07 +0900</pubDate>
    <lastBuildDate>Sat, 25 Apr 2020 17:58:07 +0900</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>[VSCode 확장앱] 개발 contribute 개념 소개</title>
        <description>&lt;h2 id=&quot;introduce&quot;&gt;Introduce&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://lee95292.github.io/boostcourse/2019/12/26/vscode-_extensionDevelopment.html&quot;&gt;VSCode 개발환경 구성&lt;/a&gt;이 완료된 상태라고 가정하고, 제가 사용했던 VSCode Extension API를 소개합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;실제 사용 예시는 &lt;a href=&quot;https://github.com/microsoft/vscode-extension-samples/&quot;&gt;ms 공식 샘플들&lt;/a&gt;를 참고하시면 좋습니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;Extension을 개발한다는 이야기는 , &lt;strong&gt;contributes&lt;/strong&gt;를 통해 Command를 추가하거나 View를 개선 등등, 각각의 Context에 맞는 기능들을 개발한다는 이야기입니다.&lt;/p&gt;

&lt;p&gt;실제로 extension 설명 페이지에서 &lt;strong&gt;contributes&lt;/strong&gt; 라는 탭은 유저의 조작을 통해 실행할 수 있는 모든 포인트를 설명합니다.&lt;/p&gt;

&lt;h3 id=&quot;contribution-points&quot;&gt;contribution points?&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;contribute는, VSCode UI 또는 컨텍스트에서 유저와 Extension 사이의 Interface역할을 합니다.&lt;/p&gt;

&lt;p&gt;즉, 개발자는 Extension을 개발하기 전에 &lt;a href=&quot;https://code.visualstudio.com/api/references/contribution-points#contributes&quot;&gt;모든 contributes&lt;/a&gt;를 참고하고 적절한 contribution API를 사용해 extension을 구현해야합니다.&lt;/p&gt;

&lt;h2 id=&quot;contribute-&quot;&gt;Contribute의 종류&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;User와 IDE 사이에 상호작용을 위한 많은 Contribution point가 있습니다. 자주 사용되는 내용들을 설명하도록 하겠습니다.&lt;/p&gt;

&lt;h3 id=&quot;command&quot;&gt;command&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;vscode에서 명령 팔레트를 통해 실행하는 Command context입니다. 가장 많이 사용되는 contribute중 하나입니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;유저가&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;vscode&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;hello world&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;커멘드를&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;실행시키면&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;extension.commandTest에&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;바인딩된&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;메서드&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;실행&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;contributes&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;commands&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;command&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;extension.commandTest&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;hello world!&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;menus&quot;&gt;menus&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;editor, file treeview,context menu 등에 바인딩되는 contribute입니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;에디터에서&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;우클릭&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;시&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;나타나는&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;메뉴에&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;대한&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;contribute입니다.&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;확장자가&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.java인&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;파일의&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;에디터에의&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;컨텍스트&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;메뉴에서&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;나타나며,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;선택&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;시&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;extension.commandTest에&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;바인딩된&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;메서드가&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;실행됩니다.&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;contributes&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;editor/context&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;command&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;extension.commandTest&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;when&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;resourceExtname==.java&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;configuration&quot;&gt;configuration&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;vscode 또는 workspace의 설정에 해당하는 contribute입니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;vscode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;workspace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getConfiguration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;myExtension&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;위처럼 extension 에서 불러와 값을 사용할 수도 있으며, 마찬가지로 vscode API를 통해 setting도 가능합니다.&lt;/p&gt;

&lt;div style=&quot;display:flex&quot;&gt;
&lt;img src=&quot;https://code.visualstudio.com/assets/api/references/contribution-points/configuration.png&quot; width=&quot;70%&quot; /&gt;

&lt;img src=&quot;https://code.visualstudio.com/assets/api/references/contribution-points/settings-ui.png&quot; width=&quot;100%&quot; /&gt;

&lt;/div&gt;

&lt;p&gt;configuration을 contribute에 configuration을 등록해놓으면 위 사진처럼 유저가 editor, UI등에서 설정을 편집할 수 있도록 해줍니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;language&quot;&gt;language&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;선언형 언어의 특징에 해당하는 아래 내용들을 컨트롤할 수 있는 API를 제공합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;(주로 특정 언어에서 사용되는 확장프로그램 개발 시 자주 사용됩니다)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Comment toggling&lt;/li&gt;
  &lt;li&gt;Brackets definition&lt;/li&gt;
  &lt;li&gt;Autoclosing&lt;/li&gt;
  &lt;li&gt;Autosurrounding&lt;/li&gt;
  &lt;li&gt;Folding&lt;/li&gt;
  &lt;li&gt;Word pattern&lt;/li&gt;
  &lt;li&gt;Indentation Rules&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;keybinding&quot;&gt;keybinding&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;단축키 관련 설정입니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://code.visualstudio.com/assets/api/references/contribution-points/keybindings.png&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;closing&quot;&gt;Closing&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;자주 사용되는 contribute를 간단하게 설명했습니다. contribution point에 대한 자세한 설명과 사용법은 &lt;a href=&quot;https://code.visualstudio.com/api/references/contribution-points#contributes&quot;&gt;공식 페이지의 Contribution-point&lt;/a&gt;를 참고하시면 됩니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;extension 개발을 위해 contribute와 바인딩되는 메서드들을 구현하기 위해서는 &lt;a href=&quot;https://code.visualstudio.com/api/references/vscode-api&quot;&gt;공식 페이지의 VScode-API&lt;/a&gt;를 참고해 개발하시면 됩니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;더 많은 contributes API를 사용해보고 설명 업데이트 하겠습니다 :)&lt;/p&gt;
</description>
        <pubDate>Sat, 25 Apr 2020 17:33:22 +0900</pubDate>
        <link>http://lee95292.github.io/vscode/2020/04/25/vscode-_extension_devAPI_intro.html</link>
        <guid isPermaLink="true">http://lee95292.github.io/vscode/2020/04/25/vscode-_extension_devAPI_intro.html</guid>
        
        
        <category>vscode</category>
        
      </item>
    
      <item>
        <title>[jenkins 403, no valid crumb] 에러 리포트</title>
        <description>&lt;p&gt;이번 포스팅에서는 젠킨스를 사용하며 만난 403에러의 원인과 해결과정을 풀어서 설명하겠습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/git_jenkins_403/Inkedjenkinserror_LI.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;“No valid crumb was included in the request”&lt;/p&gt;

&lt;p&gt;(만약 빠른 해결을 원하신다면, jenkins global security settings &amp;gt; csrf disable을 체크하면 됩니다.)&lt;/p&gt;

&lt;h1 id=&quot;intro&quot;&gt;Intro&lt;/h1&gt;

&lt;h3 id=&quot;csrf&quot;&gt;CSRF란?&lt;/h3&gt;

&lt;p&gt;사이트 간 요청 위조(또는 크로스 사이트 요청 위조, 영어: Cross-site request forgery, CSRF, XSRF)는 웹사이트 취약점 공격의 하나로, 사용자가 자신의 의지와는 무관하게 공격자가 의도한 행위(수정, 삭제, 등록 등)를 특정 웹사이트에 요청하게 하는 공격을 말합니다.&lt;br /&gt;
&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%82%AC%EC%9D%B4%ED%8A%B8_%EA%B0%84_%EC%9A%94%EC%B2%AD_%EC%9C%84%EC%A1%B0&quot;&gt;출처&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;jenkins&quot;&gt;Jenkins란?&lt;/h3&gt;

&lt;p&gt;개발에 이은 지속적인 통합과 배포를 담당하는 도구입니다.&lt;br /&gt;
젠킨스는 Java언어 베이스로 만들어진 CI/CD 도구로, 1400개가 넘는 다양한 플러그인을 지원하기때문에 배포 시 테스트 자동화, 취약점 점검 등 서비스를 배포/운영하는 개발자 및 인프라 관련 업무에서 많은 편리함을 주는 도구입니다.&lt;/p&gt;

&lt;p&gt;비슷하게 지속적 통합을 제공하는 도구로는 travisCI,circleCI등이 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/git_jenkins_403/jenkins-workflow.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;(jenkins-workflow, &lt;a href=&quot;http://oraclefusiontechnologies.blogspot.com/2014/04/continuous-integration-with-jenkins.html&quot;&gt;위키백과&lt;/a&gt;)&lt;/p&gt;

&lt;h1 id=&quot;section&quot;&gt;오류 상황&lt;/h1&gt;

&lt;p&gt;소스코드의 업데이트를 확인하기 위해 Github의 Webhook이나 다른 연동 도구를 통해서 젠킨스와 연결해야합니다.&lt;br /&gt;
이 과정에서 아래와 같은 에러문구를 확인했고, 어떤 이유에서 github가 &lt;strong&gt;jenkins의 요청을 거부&lt;/strong&gt;했다는 것을 알 수 있었습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/git_jenkins_403/Inkedjenkinserror_LI.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;에러메시지 : No valid crumb was included in the request — 요청에 유효한 Crumb가 존재하지 않는다.&lt;/p&gt;

&lt;p&gt;에러메시지에는 crumb라는 특이한 단어가 등장합니다. 직역하면 빵부스러기, 구글에 검색해도 특별한 내용이 나오진 않습니다만, &lt;strong&gt;Jenkins crumb&lt;/strong&gt;라고 검색하니 jenkins의 보안관련 문서들이 보였습니다.&lt;/p&gt;

&lt;p style=&quot;font-size:1.2rem; font-weight:700;&quot;&gt;crumb란, Jenkins에서 github등 소스코드 리포지토리의 데이터를 가져올 때 요청의 주체가 자신임을 확인하도록 하는 IP+salt로 이루어진 쿠키입니다. &lt;/p&gt;

&lt;p&gt;즉, crumb를 요청헤더에 쿠키로 추가하므로써 CSRF 공격을 방지할 수 있는것이죠!&lt;/p&gt;

&lt;p&gt;반대로 Jenkins의 CSRF 보안 설정을 켜놓으면 &lt;strong&gt;어떤 문제&lt;/strong&gt;로 인해 crumb의 유효성이 사라졌을 때 403에러와 함께 일을 진행하지 못하는 사태가 발생합니다. 참고로 젠킨스는 2.0부터 CSRF protection이 기본 보안설정입니다.&lt;br /&gt;
(하지만 위에서도 말씀드렸듯, CSRF 보안 설정을 체크헤제하면 에러는 말끔히 사라집니다.)&lt;/p&gt;

&lt;h1 id=&quot;section-1&quot;&gt;문제 분석 및 해결&lt;/h1&gt;

&lt;p&gt;위에서 이야기한 &lt;strong&gt;어떤 문제&lt;/strong&gt;를 찾는건 시간이 꽤 걸렸습니다…&lt;br /&gt;
crumb에 대해 잘 모를 때 github의 설정문제라고 생각하고 자꾸 삽질을 했는데요,&lt;br /&gt;
has no valid crumb 에러가 발생하는 이유는 대부분 프록시 설정 문제입니다.&lt;/p&gt;

&lt;p&gt;crumb는 IP+salt의 조합이라고 설명했는데요, “has no valid crumb”라는 에러메시지를 통해 제가 Jenkins를 서비스하는 과정에서 요청 IP가 변경되는 과정이 있는지 생각해봐야합니다.&lt;br /&gt;
대부분 젠킨스 서버와 프록시가 있거나 캐싱 서버가 있어 IP주소가 변경되는 경우가 많습니다. 이때문에 Crumb가 유효성을 상실하게 됩니다.&lt;/p&gt;

&lt;p&gt;문제를 찾고 이부분을 어떻게 해결할까 하다가 Jenkins Crumb정책 관련한 소스코드를 보면서 답을 찾았습니다.&lt;/p&gt;

&lt;p&gt;Jenkins의 소스코드입니다.
&lt;a href=&quot;https://github.com/jenkinsci/jenkins/blob/master/core/src/main/java/hudson/security/csrf/DefaultCrumbIssuer.java&quot;&gt;Jenkins DefaultCrumbIssuer.java&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DefaultCrumbIssuer&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CrumbIssuer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@DataBoundConstructor&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;DefaultCrumbIssuer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;excludeClientIPFromCrumb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;excludeClientIPFromCrumb&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;excludeClientIPFromCrumb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;initializeMessageDigest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
     &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;synchronized&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;issueCrumb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ServletRequest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;salt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isExcludeClientIPFromCrumb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getClientIP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getClientIP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpServletRequest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;defaultAddress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getRemoteAddr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;forwarded&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getHeader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X_FORWARDED_FOR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;forwarded&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	        &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hopList&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;forwarded&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;,&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hopList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hopList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;defaultAddress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;XFF란? X-forwarded-for의 약자로, 지금 상황처럼 프록시나 다른 중간 서버로 인해 IP가 변경될 때, Origin IP를 식별하는 표준 헤더입니다.
&lt;a href=&quot;https://ko.wikipedia.org/wiki/XFF&quot;&gt;위키백과&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;getClientIP메서드에서 XFF헤더가 있는 경우 hopList를 통해 중간에 거쳐갈 IP주소 리스트를 리턴하도록 작성되었습니다.&lt;/p&gt;

&lt;p&gt;즉, 젠킨스 설정을 통해 문제를 해결할 수 있는것이죠!&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;excludeClientIPFromCrumb&lt;/strong&gt;변수는 위의 issueCrumb메서드에서 &lt;strong&gt;false일 때&lt;/strong&gt; getClientIp메서드를 통해 XFF헤더를 적용합니다.&lt;/p&gt;

&lt;p&gt;즉, DefaultCrumbIssuer의 생성자로 false를 지정하게 되면 XFF가 지정되고, 프록시로 인한 IP변조 문제가 해결되는것이죠.&lt;/p&gt;

&lt;p&gt;이제부터는 해결과정입니다.&lt;/p&gt;

&lt;p&gt;젠킨스 그루비 설정파일을 지정하기 위해 젠킨스 홈에서 설정파일 만들어줍니다.&lt;br /&gt;
(default: /var/lib/jenkins/init.goovy.d/myconf.groovy)&lt;/p&gt;

&lt;div class=&quot;language-groovy highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;hudson.security.csrf.DefaultCrumbIssuer&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;jenkins.model.Jenkins&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 중단모드일 경우 시행하면 안됨&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Jenkins&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;instance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isQuietingDown&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()){&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;//CSRF 설정이 있는 경우&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Jenkins&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;instance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getCrumbIssuer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()!=&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Jenkins&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;instance&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;// DefaultCrumbIssuer(false) : XFF헤더 정의&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;instance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setCrumbIssuer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DefaultCrumbIssuer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;instance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'excludeClientIPfromCrumb set: false'&lt;/span&gt;

  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	  &lt;span class=&quot;n&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Nothing changed'&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;이후 젠킨스를 재시작합니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;service jenkins restart
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;CSRF와 프록시 설정으로 인해 발생하는 403에러에 대한 해결과정이었습니다!&lt;/p&gt;
</description>
        <pubDate>Sun, 12 Apr 2020 12:21:57 +0900</pubDate>
        <link>http://lee95292.github.io/jenkins/2020/04/12/jenkins403.html</link>
        <guid isPermaLink="true">http://lee95292.github.io/jenkins/2020/04/12/jenkins403.html</guid>
        
        
        <category>jenkins</category>
        
      </item>
    
      <item>
        <title>자바스크립트를 공부하려하는 당신에게</title>
        <description>&lt;p&gt;저는 학교에서 Python, C/C++, Java를 다루는 수업을 수강하고, 문법을 익혔고,&lt;br /&gt;
Java와 C로는 여러 토이프로젝트를 해보면서 나름 프로그래밍 언어를 배우고 사용하는데 익숙해져 있어서 내심 프로그래밍 언어는 거기서 거기지~ 라는 생각을 해왔습니다.&lt;/p&gt;

&lt;p&gt;자바스크립트를 배우면서 그 오만한 생각은 와장창 깨져버렸습니다…&lt;/p&gt;

&lt;p&gt;이 글에서는 제가 자바스크립트를 공부하며, 사용하며 어떤게 어려웠는지,&lt;br /&gt;
그럼에도 계속 자바스크립트를 공부하는 이유, 제가 생각하는 자바스크립트의 매력을 소개해보려 합니다!&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;reactjs&quot;&gt;사용한 라이브러리 :React.js&lt;/h2&gt;

&lt;p&gt;제일 처음으로 저는 웹 프론트 페이지를 만들기 위해 Reactjs 라이브러리를 공부했습니다.&lt;br /&gt;
이전까지 HTML/CSS/JQuery로 페이지를 구성했는데, 이때는 HTML문서에 Javascript를 끼워넣는 느낌이어서 코딩을 한다는 느낌이 들지는 않았고, 제대로된 페이지를 만들어 본 경험은 없었습니다.&lt;/p&gt;

&lt;p&gt;조금 더 제대로된 다이나믹한 웹 페이지를 만들기 위해 Jquery를 더 공부할까 고민했습니다.&lt;br /&gt;
그러던 도중 주변에서 React가 정말 쉽고 간편하다는 이야기를 듣고 React를 시작하게 되었습니다.&lt;/p&gt;

&lt;p&gt;결론부터 말씀드리자면,&lt;strong&gt;React는 간편하지만 절대 쉽지는 않습니다&lt;/strong&gt;.&lt;br /&gt;
위에서 말씀드렸듯, 저는 프로그래밍 언어 학습을 몇차례 학습하고, 각 언어들이 가지는 공통점과 차이점을 비교하면서 학습하는 것에 익숙해져 있었는데요, React에서 다루는 중점적인 개념은 여타 프로그래밍 언어와 상당히 차이가 있었습니다!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/jslib-intro/react-lifecycle.png&quot; /&gt;
&lt;span style=&quot;text-align:center&quot;&gt;그림: React 컴포넌트의 생명주기&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;대표적인 예시로,&lt;strong&gt;state와 property를 다루는 일, 컴포넌트의 생명주기, 모듈화, 컴포넌트, 훅&lt;/strong&gt; 등이 그것입니다.&lt;/p&gt;

&lt;p&gt;React에서는 컴포넌트의 렌더링이 Property와 State라고 불리는 리액트 컴포넌트의 특수 변수의 변경에 따라 일어나는데,&lt;br /&gt;
이런 개념을 멀리서 보면 객체지향의 상속과 비슷하다 생각할 수도 있지만 전혀 다른 개념이며, 이와 비슷하게 리액트가 사용하는 생소한 개념에 익숙해지는 것에 생각보다 시간이 많이 걸렸습니다…&lt;/p&gt;

&lt;p&gt;이렇듯, “쉽다”는것이 (최소한 저에게) 리액트의 장점이 아닙니다.&lt;br /&gt;
그럼에도 불구하고, 저는 이제 페이지를 구현할 때 React만을 사용합니다.&lt;br /&gt;
리액트는 컴포넌트를 재사용하기에 정말 편리합니다.&lt;br /&gt;
물론 HTML/CSS코드도 하면 재활용할 수 있지만 이는 말그대로 재활용이고, 상황에 맞게 코드를 수정해주어야 합니다.&lt;/p&gt;

&lt;p&gt;컴포넌트를 재사용한다는 것은, 기존 HTML/CSS/JS로 작성된 소스코드를 마치 &lt;strong&gt;함수 호출하듯 편리하게 사용&lt;/strong&gt;하는것을 의미합니다.&lt;br /&gt;
저에게는 이것이 React를 배우는 데 걸리는 어떤 어려움도 커버할 수 있을만한 큰 장점이라고 생각합니다.&lt;/p&gt;

&lt;p&gt;프론트엔드 코드를 객체지향적으로 다루는 것 또한 저에게 장점으로 다가왔습니다.&lt;/p&gt;

&lt;h2 id=&quot;nodejs&quot;&gt;사용한 라이브러리 :Node.js&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;저는 여태 서버 프로그램을 작성하기 위해 Spring framework의 Spring boot를 사용했습니다.&lt;br /&gt;
스프링 부트를 사용하면서 딱히 불만이나 단점에 대해 생각해본 적이 없고, 오히려 SpringFramework는 국내에서 주도적으로 사용되는 만큼 문서가 풍부하고 한국 내 커뮤니티도 활발해 버그를 해결하는 것이 어렵지 않았습니다.&lt;/p&gt;

&lt;p&gt;그러던 어느날 저는 어떤 계기로 Nodejs의 express 라이브러리를 이용해 서버 프로그램을 작성해보았고, 스프링을 사용할때와 상당히 다른 느낌을 받았습니다.&lt;br /&gt;
짧은 기간 사용했지만, 그 느낌을 공유해볼까 합니다.&lt;/p&gt;

&lt;p&gt;스프링같은 경우, 엔터프라이즈급 서버 프로그램을 위한 &lt;strong&gt;“프레임워크”&lt;/strong&gt;이기 때문에,&lt;br /&gt;
시작부터 어떤 틀 위에서 시작하고, 여러가지 설정을 거쳐 프로젝트를 시작합니다. 누군가는 이 과정이 너무 복잡하고 쓸데없다고 말하지만, 저는 절대 그렇게 생각하지 않습니다.&lt;br /&gt;
프로젝트를 시작함과 동시에 많은 부분을 프레임워크로부터 보장받는 것이기에, 프레임워크를 사용하는것과 Node같은 라이브러리 패키지를 사용하는 것과의 장단점을 비교하는 것은 의미가 없다고 생각합니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Springboot: 46.1k stars, 662contributers&lt;br /&gt;
nodejs : 68.3k stars, 2657contributers&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;다만 Node.js 런타임 뿐만 아니라 Javascript 라이브러리 전반적으로 커뮤니티 활성화 정도가 매우 높다고 느꼈습니다.&lt;br /&gt;
위는 Nodejs와 Spring project의 컨트리뷰터 수입니다. 물론 Node는 Spring과 비교될 격이 아니고, OpenJRE나 OpenJDK와 비교해야 옳지만, jre,jdk는 상용 버전인 oracle의 비중이 더 높기에 최대한 커뮤니티 활정정도를 비교할만한 지표로 생각했습니다.&lt;/p&gt;

&lt;p&gt;커뮤니티 활성 정도를 보며 한편으론 다른 재단이나 커뮤니티에 비해 유저들이 참여해 생성해낸 프로젝트가 큰 영향력을 갖는 것이 신기했습니다.&lt;/p&gt;

&lt;p&gt;Spring같은 경우 pivotal이라는 회사에서 spring 관련 프로젝트를 시작하고 키워나가는 방식입니다. 어찌보면 pivotal이 시작한 프로젝트가 무조건 메인 프로젝트이므로 유저에게 선택권이 줄어들 수 있다고 생각할 수 있습니다.&lt;br /&gt;
(스프링은 스프링 자체의 설계 방식이 있기에 어쩔 수 없습니다. 저는 잘 모르지만 이 방식이 같는 장점 또한 있을 것입니다.)&lt;/p&gt;

&lt;p&gt;반면 Nodejs의 경우 인증이라는 커다란 부분을 담당하는 패키지 Passport.js는 개인이 설립한 프로젝트임에도 유저들에게 그 편리성과 효용성을 입증받아 가장 많이 사용되는 패키지로 선택되었습니다. 이런 적자생존 방식으로 생태계가 유지되는 것이 매우 어렵지만, 그만큼 유저에게 많은 편리함을 주고있다고 생각했습니다.&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;마무리&lt;/h3&gt;

&lt;p&gt;나름 장단점을 설명한다고 글을 썼지만, 너무 장점 위주로 설명한 것 같습니다…&lt;br /&gt;
생태계가 활발하고 자주 변화한다고 좋은 것만은 아니라고 생각합니다. 유저는 변화한 내용을 계속 학습하는 것에 비용이 많이 발생할 수도 있고, 새로운 보안 취약점이 발생하거나 기반 패키지가 업데이트 된 경우 상위 패키지와 호환성이 떨어질 수도 있습니다.&lt;/p&gt;

&lt;p&gt;마지막 부분, nodejs의 특징을 조금 더 잘 설명하기 위해 제가 경험한 Spring framework와 비교하며 작성했지만, 위에 말씀드렸 듯 모든것에는 장단점이 있으니, 프로젝트에 사용할 기술스택을 잘 선택하셨으면 합니다!&lt;/p&gt;
</description>
        <pubDate>Sun, 15 Mar 2020 09:53:54 +0900</pubDate>
        <link>http://lee95292.github.io/web/2020/03/15/jslibrary-introduce.html</link>
        <guid isPermaLink="true">http://lee95292.github.io/web/2020/03/15/jslibrary-introduce.html</guid>
        
        
        <category>web</category>
        
      </item>
    
      <item>
        <title>글또 4기 시작, 다짐글</title>
        <description>&lt;p&gt;글또 4기 다짐글 : 근거있는 변화와 계획!&lt;/p&gt;

&lt;h1 id=&quot;section&quot;&gt;글또를 하게 된 계기&lt;/h1&gt;

&lt;p&gt;나는 아래의 목적을 가지고 글을 썼지만, 글을 쓰는것에 대한 동기부여가 희미해졌다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;버그리포트를 열심히 써서 나중에 똑같은 에러가 터졌을때 참고하자 » 검색해서 보는게 빠르고 정확했다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;자기PR: 나의 꾸준함을 글쓰기로 보여주자 » 나는 별로 꾸준하지도 성실하지도 않았다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;공부하자: 글을 쓰면서 지식을 내면화하고 정리하자. » 이게 그나마 글을 쓸만한 동기였다.&lt;/p&gt;

    &lt;p&gt;(글을 쓰는 과정에서 내가 알고있다고 생각한 지식에 의문을 품었고, 질문에 대한 답을 찾아나가면서 많이 배웠다.)&lt;/p&gt;

    &lt;p&gt;하지만 공부하려고 글을 쓰는것은 초중고 12년 공부습관에 반하는 행동이었고, 내 생각을 읽기 쉽게 정리하는것도 생각보다 너무 힘들었다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;section-1&quot;&gt;여전히 글쓰는것은 힘들고 귀찮지만, 생각과 상황이 조금 바뀌었다.&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;우선 개발자 글쓰기모임 글또라는 활동을 알게되었다.&lt;/p&gt;

    &lt;p&gt;글쓰는 또라이가 세상을 바꾼다. 이름이 멋있기도 했고, 개발자분들이 &lt;strong&gt;글쓰고 피드백, 커뮤니케이션&lt;/strong&gt;하는 모습이 너무 부럽고 빛났다.&lt;br /&gt;
(예치금을 두고 글을 쓴다는 약간의 강제성을 얻기 위해 지원하기도 했다.)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;글을 쓰는것이 힘든것이 아니라는것을 깨달았다.&lt;/p&gt;

    &lt;p&gt;글을 쓰는 것 자체로도 어렵지만, 글을 쓰기 위해 지식을 정리하고,확장하고, 내가 가진 질문에 대한 답을 채우는 것을 힘들어했고, 그것이 글쓰기를 멀리하게 된 이유였다.&lt;/p&gt;

    &lt;p&gt;필요한 지식만 검색해서 얻고 땡. 이게 왜 이렇게 되는지는 시간있을때만 찾아보고 아니면 애써 무시했었다.
얻은 지식을 정리하고 확장하는 일을 게을리 하면 그것은 지식의 파편으로 남아서 곧 죽은 지식이 된다.&lt;/p&gt;

    &lt;p&gt;이제는 내가 글쓰기에서 어떤 과정을 힘들어했는지 알게됐고, 극복해보려고 한다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;section-2&quot;&gt;그래서 이제 어떤 글을 쓸까?&lt;/h2&gt;

&lt;p&gt;나는 개발/인프라 분야에서 흥미 분야가 광범위한 편이다.&lt;br /&gt;
(지식영역이 넓은건 아닌데, 뭔가를 알게되면 다 재미있어보이고 한번쯤 해보고싶다.)&lt;/p&gt;

&lt;p&gt;그래서 지금 쓰고싶은 글을 나열하고, 나중에 골라서 쓰면 어떨까 싶다.&lt;/p&gt;

&lt;p&gt;다루고싶은 내용&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;로버트 C 마틴 - Clean Architecture&lt;br /&gt;
Clean code를 너무 인상깊게 봐서 아키텍쳐편도 샀다. 아마 2~4주차 사이에 독후감으로 쓸 것 같다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;정보처리기사 - 운영체제파트&lt;br /&gt;
나는 운영체제 연구실에서 운영체제와 많이 무관한 가상화파트를 다룬다.
하지만 면접만 보면 운영체제에 대한 질문이 빠지지 않고 나오기에 정리해야할 필요성을 느꼈다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;관심은 있지만 사용경험이 적은 오픈소스 소프트웨어들&lt;br /&gt;
ElasticSearch, openstack, Kafka, Zepplin - 컨트리뷰션을 목표로 공부하고 분석하고 사용해보고싶다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;사실 이전에도 포스팅 스택은 항상 차있었지만, 글을 쓰기 전에 흥미가 다른곳으로 돌아간 경우가 많다.&lt;/p&gt;

&lt;p&gt;하지만! 이번엔 능동적인 글쓰기를 목표로, (다루고싶은 내용)에 적힌 글을 쓸 것이다.&lt;/p&gt;
</description>
        <pubDate>Sat, 29 Feb 2020 19:14:43 +0900</pubDate>
        <link>http://lee95292.github.io/etc/2020/02/29/geultto_start.html</link>
        <guid isPermaLink="true">http://lee95292.github.io/etc/2020/02/29/geultto_start.html</guid>
        
        
        <category>etc</category>
        
      </item>
    
      <item>
        <title>[INTG Project] 개념이 잘 정리된 링크| 테크블로그| 공식 Document 모음</title>
        <description>&lt;p&gt;Spring boot - cloud - database - frontend - devops -security&lt;/p&gt;

&lt;p&gt;웹 서비스를 위한 폭넓은 개발스택을 갖추길 희망합니다.&lt;/p&gt;

&lt;p&gt;저만을 위한 링크북 인덱스이고, 제가 이해한 글들을 모아놓았지만, 비슷한 목표를 가진분들이 참고하시면 좋을것 같습니다.&lt;/p&gt;

&lt;h1 id=&quot;section&quot;&gt;개념이 잘 정리된 링크&lt;/h1&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;시스템 OS/Linux/Windows/JVM&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://wiki.kldp.org/HOWTO/html/Adv-Bash-Scr-HOWTO/&quot;&gt;고급 쉘 스크립트 사전&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://blog.lael.be/post/73&quot;&gt;우분투 서버세팅(운영환경 관련 bash명령어)&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.holaxprogramming.com/2017/10/09/java-jvm-performance/&quot;&gt;JVM 메모리 관리구조&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://yaboong.github.io/java/2018/05/26/java-memory-management/&quot;&gt;JVM Stacc, Heap 할당방법&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://blog.naver.com/PostView.nhn?blogId=tipsware&amp;amp;logNo=221359282016&amp;amp;parentCategoryNo=&amp;amp;categoryNo=83&amp;amp;viewDate=&amp;amp;isShowPopularPosts=true&amp;amp;from=search&quot;&gt;DLL 개념과 사용&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;인프라&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://d2.naver.com/helloworld/6070967&quot;&gt;네이버 분산처리(**꼭 정독해보자~)&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;웹&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Front
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;https://velog.io/@jeff0720/React-%EA%B0%9C%EB%B0%9C-%ED%99%98%EA%B2%BD%EC%9D%84-%EA%B5%AC%EC%B6%95%ED%95%98%EB%A9%B4%EC%84%9C-%EB%B0%B0%EC%9A%B0%EB%8A%94-Webpack-%EA%B8%B0%EC%B4%88#%EC%9B%B9%ED%8C%A9%EC%9C%BC%EB%A1%9C-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%ED%8C%8C%EC%9D%BC-%EB%B9%8C%EB%93%9C%ED%95%98%EA%B8%B0&quot;&gt;Webpack - React 설정&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://webclub.tistory.com/628&quot;&gt;css flex(긴글)&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://blog.naver.com/yoon980208/221478151850&quot;&gt;css flex(짧은글)&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Back
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;https://blog.outsider.ne.kr/1160&quot;&gt;JWT 개념&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://all-record.tistory.com/186&quot;&gt;우분투환경에서 단순 배포하기_W&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Spring
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;https://jeong-pro.tistory.com/167&quot;&gt;Spring bean 생성과정&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;클라우드&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://medium.com/harrythegreat/aws-%EA%B0%80%EC%9E%A5%EC%89%BD%EA%B2%8C-vpc-%EA%B0%9C%EB%85%90%EC%9E%A1%EA%B8%B0-71eef95a7098&quot;&gt;VPC(Virtual Private Clout)개념, 클라우드 네트워크 헷갈릴 때 보기&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;git &amp;amp; github&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://git-scm.com/book/ko/v2/Git-%EB%8F%84%EA%B5%AC-Reset-%EB%AA%85%ED%99%95%ED%9E%88-%EC%95%8C%EA%B3%A0-%EA%B0%80%EA%B8%B0&quot;&gt;git reset(add,commit 리셋)&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;알고리즘&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.acmicpc.net/blog/view/9&quot;&gt;세드먼트 트리&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;기타&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://heropy.blog/2017/09/30/markdown/&quot;&gt;Markdown 문법&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;document&quot;&gt;공식 Document&lt;/h1&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/&quot;&gt;Java8 API&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://kgmyh.github.io/blog/2017/12/02/spring-boot-chapter01/&quot;&gt;spring boot(한글)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;2&quot;&gt;Python&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.spring.io/&quot;&gt;Spring&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com&quot;&gt;도커&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://kubernetes.io/ko/docs/home/&quot;&gt;k8s(한글)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.android.com&quot;&gt;Android&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://nodejs.org/api/&quot;&gt;node&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;section-1&quot;&gt;기업| 개인 기술블로그&lt;/h1&gt;

&lt;hr /&gt;

&lt;p&gt;사실 &lt;a href=&quot;https://medium.com/@Dongmin_Jang/%EC%97%85%EC%B2%B4%EB%B3%84-%EA%B8%B0%EC%88%A0-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%A6%AC%EC%8A%A4%ED%8A%B8-e2d736d0e658&quot;&gt;테크블로그는 여기&lt;/a&gt;에 다 정리되어있다. 내가 자주보는 한글 블로그 위주로 모았다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://d2.naver.com/home&quot;&gt;네이버 D2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tech.kakao.com/&quot;&gt;카카오 기술블로그&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/coupang-tech&quot;&gt;쿠팡 기술블로그&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://xguru.net/&quot;&gt;구루(권정혁님) 기술블로그&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 27 Jan 2020 14:46:00 +0900</pubDate>
        <link>http://lee95292.github.io/%ED%95%98%EB%82%98%EB%A1%9C_%EC%A0%95%EB%A6%AC%ED%95%98%EA%B8%B0/2020/01/27/INTG_TheoryLink-TheoryLink.html</link>
        <guid isPermaLink="true">http://lee95292.github.io/%ED%95%98%EB%82%98%EB%A1%9C_%EC%A0%95%EB%A6%AC%ED%95%98%EA%B8%B0/2020/01/27/INTG_TheoryLink-TheoryLink.html</guid>
        
        
        <category>하나로_정리하기</category>
        
      </item>
    
      <item>
        <title>heritrix 오픈소스 웹 크롤러 사용하기</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;Heritrix 오픈소스 웹 크롤러를 사용해보고 방법을 정리하려합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;자세한 사용법은 &lt;a href=&quot;https://github.com/internetarchive/heritrix3/wiki/&quot;&gt;github 위키&lt;/a&gt;에 잘 나와있지만, 기본적인 부분,헷갈릴만한 부분이나 자주 사용할만한 옵션들을 소개해보도록 하겠습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;section&quot;&gt;설치&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget http://builds.archive.org/maven2/org/archive/heritrix/heritrix/3.4.0-SNAPSHOT/heritrix-3.4.0-20190828.200101-25-dist.tar.gz

tar -xzf heritrix-3.4.0-20190828.200101-25-dist.tar.gz
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;-설치 끝&lt;/p&gt;

&lt;p&gt;설치는 매우 간단하지만,&lt;/p&gt;

&lt;p&gt;설정이 꽤 귀찮고 모호한 부분이 있습니다. spring xml properties를 사용해서 직접 설정합니다.&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;일단 기본 설정으로 크롤링 진행&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;Heritrix/bin

./heritrix -a admin:amdin -b /

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;-a 옵션으로 계정을 설정하고, -b옵션을 통해 접근권한을 설정합니다.&lt;/li&gt;
  &lt;li&gt;-b옵션 없이 실행하는 경우, localhost에서만 사용 가능하고,&lt;/li&gt;
  &lt;li&gt;-b / 로 옵션을 주는경우, 어디서든 계정으로 엑세스할수 있습니다.&lt;/li&gt;
  &lt;li&gt;-p 옵션으로 포트를 지정할 수 있습니다.(기본 : 8443)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(b옵션을 못찾고 포트포워딩하느라 시간을 많이 썼습니다…)&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;크롤링 수행&lt;/h3&gt;

&lt;p&gt;Create job으로 job(크롤링 작업 단위) 생성합니다.&lt;/p&gt;

&lt;p&gt;생성하면 Hritrix_home/jobs/[job_name]/crawler-beans.cxml 파일 생깁니다.&lt;/p&gt;

&lt;p&gt;웹페이지에서 해당 파일을 수정할 수도 있지만, 저같은경우 에러가 떠서 직접 수정했습니다.&lt;/p&gt;

&lt;p&gt;기본설정&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#1
metadata.operatorContactUrl=http://lee95292.github.io

...

#2
&lt;span class=&quot;nt&quot;&gt;&amp;lt;bean&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;longerOverrides&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;org.springframework.beans.factory.config.PropertyOverrideConfigurer&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;properties&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;props&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;prop&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;key=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;seeds.textSource.value&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

# URLS HERE
http://lee95292.github.io

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/prop&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;/props&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;즉, metadata.operatorContactUrl을 지정하고 #URLs Here 표시된 곳 밑에 URL을 추가해주면 됩니다.&lt;/p&gt;

&lt;p&gt;operatorContactUrl에 대해서는 자세한 설명이 나와있지는 않네요..&lt;/p&gt;

&lt;p&gt;저장 한 후, jobs 페이지에서 크롤링을 수행합니다.&lt;/p&gt;

&lt;p&gt;build &amp;gt; launch 후 기다리시면 크롤링 작업이 완료됩니다.&lt;/p&gt;

&lt;p&gt;pause를 통해 중지&lt;br /&gt;
terminate를 통해 중단&lt;br /&gt;
teardown을 통해 종료할 수 있습니다.&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;옵션&lt;/h3&gt;

&lt;p&gt;crawler-beans.cxml에서 설정가능한 옵션들입니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TransclusionDecideRule을&lt;/strong&gt; 삭제하시면 narrow crawling을 수행합니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;blockquote&gt;
    &lt;p&gt;seed host로 등록한 이외의 호스트를 크롤링하지 않습니다.&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;postprocess&quot;&gt;PostProcess&lt;/h3&gt;

&lt;p&gt;크롤링 결과물을 처리하는 방법입니다.. 유튜브에서 &lt;a href=&quot;https://www.youtube.com/watch?v=MAHWPeBVNpI&amp;amp;t=447s&quot;&gt;참고&lt;/a&gt;했습니다.&lt;/p&gt;

&lt;p&gt;pip install warctools&lt;br /&gt;
(pip3)&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;hanzo&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;warctools&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;warcStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;warctools&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WarcRecored&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;open_archive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;WEB-20200121115637651-00000-20607~ip-172-31-35-42.ap-northeast-2.compute.internal~8443.warc.gz&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;record&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;warcStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;********&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;warc record #&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;record&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Wed, 22 Jan 2020 06:02:12 +0900</pubDate>
        <link>http://lee95292.github.io/opensource/2020/01/22/heritrix_use.html</link>
        <guid isPermaLink="true">http://lee95292.github.io/opensource/2020/01/22/heritrix_use.html</guid>
        
        
        <category>opensource</category>
        
      </item>
    
      <item>
        <title>ProjectDesign</title>
        <description>&lt;h1 id=&quot;project-beta---&quot;&gt;Project Beta 화면 및 구현설계&lt;/h1&gt;

&lt;h2 id=&quot;section&quot;&gt;기능개요&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;키워드 등록을 통한 타겟 알림 시스템 (ElasticSearch 활용)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;등록한 키워드와 관심분야 설정을 통한 문서 추천 시스템 ( &lt;a href=&quot;https://yeomko.tistory.com/6?category=805638&quot;&gt;Collaborative Filtering&lt;/a&gt;활용 )&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;section-1&quot;&gt;1. 키워드 등록을 통한 타겟 알림 시스템&lt;/h3&gt;

&lt;p&gt;크롤링 시나리오&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;크롤링할 호스트에 대한 설정파일 참조&lt;/li&gt;
  &lt;li&gt;graph,linked list 형식으로 링크 관계 저장 / 리스트에 존재하는 문서 크롤링
    &lt;ul&gt;
      &lt;li&gt;1 Search Process : 그래프 refresh를 통해 새로운 문서가 있는지 판별&lt;/li&gt;
      &lt;li&gt;2-1. 새로운 문서가 있다면 문서의 메타정보를 그래프에 저장&lt;/li&gt;
      &lt;li&gt;2-2. 문서의 Topic판별, 단어 추출 등, Elastic에 저장하기 위한 구성 설정&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Elastic 쿼리 전송&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;키워드 등록 시나리오&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;여러개의 호스트에 여러개의 키워드 등록 가능하도록 설정
    &lt;ul&gt;
      &lt;li&gt;Create: 여러개의 키워드를 한번에 요청한경우 어근 추출을 통해 압축 (만들기,만들어 -&amp;gt;만들다)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 15 Jan 2020 23:17:29 +0900</pubDate>
        <link>http://lee95292.github.io/2020/01/15/ProjectDesign.html</link>
        <guid isPermaLink="true">http://lee95292.github.io/2020/01/15/ProjectDesign.html</guid>
        
        
      </item>
    
      <item>
        <title>[vscode] vscode 확장 프로그램 환경 구성</title>
        <description>&lt;p&gt;본 포스팅은, &lt;a href=&quot;https://code.visualstudio.com/api&quot;&gt;VSCode extension development docs&lt;/a&gt;를 학습하며 작성했습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;git과 Node.js를 사전 설치 후에 진행해주시기 바랍니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section&quot;&gt;1. 프로젝트 생성&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;npm install -g yo generator-code
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;npm을 통해 위 두 개 모듈을 설치합니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;yo (yoman) -코드 스캐폴딩 도구 : 프로젝트 뼈대를 생성해주는 도구&lt;/li&gt;
  &lt;li&gt;generator-code - vsocde ext 뼈대 코드&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yo code
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;설치한 모듈을 통해 프로젝트 뼈대를 생성하고 커멘드라인에 정보를 알맞게 제공합니다 ( 프로젝트 이름 등등,,)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;code ./[project_name]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;F5버튼을 눌러 빌드하면, &lt;strong&gt;Extension Development Host&lt;/strong&gt;가 동작합니다.&lt;/p&gt;

&lt;p&gt;확장도구 테스팅 환경이라 보시면 될 듯 합니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;개발환경에서 소스코드 저장 후, &lt;strong&gt;Extension Development Host&lt;/strong&gt;에서 리로드(Ctrl + R)하면 변경사항이 저장됩니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;extension-&quot;&gt;2. Extension 세부정보&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;.
├── .vscode
│   ├── launch.json     // Config for launching and debugging the extension
│   └── tasks.json      // Config for build task that compiles TypeScript
├── .gitignore          // Ignore build output and node_modules
├── README.md           // Readable description of your extension's functionality
├── src
│   └── extension.ts    // Extension source code
├── package.json        // Extension manifest
├── tsconfig.json
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;yoman으로 뼈대를 생성하면 코드 구조는 위와 유사합니다.&lt;/p&gt;

&lt;p&gt;이 때 ,확장 프로그램의 세부정보(Manifest)는 package.json에 위치합니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;name,publisher&lt;/strong&gt; 는 프로젝트의 유니크한 아이디를 구성하는데 사용합니다.&lt;/li&gt;
  &lt;li&gt;main은 extension 실행의 entry point를 가르킵니다. (프로젝트의 시작점)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-1&quot;&gt;3. 예시 소스코드&lt;/h2&gt;
</description>
        <pubDate>Thu, 26 Dec 2019 07:43:24 +0900</pubDate>
        <link>http://lee95292.github.io/boostcourse/2019/12/26/vscode-_extensionDevelopment.html</link>
        <guid isPermaLink="true">http://lee95292.github.io/boostcourse/2019/12/26/vscode-_extensionDevelopment.html</guid>
        
        
        <category>boostcourse</category>
        
      </item>
    
      <item>
        <title>[Mysql] mysql 원격 접속 가능하도록 설정하기</title>
        <description>&lt;ol&gt;
  &lt;li&gt;mysql 서버에서, remote주소를 통해 접근가능한 계정을 생성한다&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&quot;language-mysql&quot;&gt;create user [usrname]@[remote_addr] identified by [passowrd];
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo vi /etc/mysql/mysqld/mysqld.conf.d/mysqld.cnf
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;아래와 같은 내용이 들어있는 설정파일에서,&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;bind-address항목을 mysql 서버의 주소(외부에서 접근가능한 자기자신의 퍼블릭 주소)를 기재한다.&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mysqld]
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# * Basic Settings&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
user            &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; mysql
pid-file        &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; /var/run/mysqld/mysqld.pid
socket          &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; /var/run/mysqld/mysqld.sock
port            &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 3306
basedir         &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; /usr
datadir         &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; /var/lib/mysql
tmpdir          &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; /tmp
lc-messages-dir &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; /usr/share/mysql
skip-external-locking
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Instead of skip-networking the default is now to listen only on&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# localhost which is more compatible and is not less secure.&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;bind&lt;/span&gt;-address            &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 127.0.0.1

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;이후, servicee mysql restart&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Thu, 05 Dec 2019 06:23:51 +0900</pubDate>
        <link>http://lee95292.github.io/boostcourse/2019/12/05/enable-mysql-remote.html</link>
        <guid isPermaLink="true">http://lee95292.github.io/boostcourse/2019/12/05/enable-mysql-remote.html</guid>
        
        
        <category>boostcourse</category>
        
      </item>
    
      <item>
        <title>[Jenkins] 젠킨스 원격 배포 (CD) 수행하기</title>
        <description>&lt;p&gt;젠킨스 서버에서 CI된 결과물을 원격 서버에 CD하기.&lt;/p&gt;

&lt;p&gt;선결조건&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;젠킨스 구동 중&lt;/li&gt;
  &lt;li&gt;CI(빌드) 세팅 완료&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;원리&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;publish over ssh 플러그인 사용&lt;/li&gt;
  &lt;li&gt;scp를 통해 배포파일 (spring의 경우는 **.jar) 전송&lt;/li&gt;
  &lt;li&gt;ssh를 통해 배포파일 실행(서버 가동스크립트)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;jenkins-on-use--1------&quot;&gt;Jenkins on use -1 : 사전  설정 (원격지 등록)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Jenkins &amp;gt; Jenkins관리 &amp;gt; 시스템 설정화면&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/jenkins/jenkins_001.PNG&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;아래쪽 publish over ssh 탭 작성&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Key 탭 - 원격지에 접근하기 위한 키 작성&lt;/p&gt;

&lt;p&gt;SSH Servers탭 - 배포파일을 전송할 원격지&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Name - 구분을 위한 이름&lt;/li&gt;
  &lt;li&gt;hostname - 호스트 주소&lt;/li&gt;
  &lt;li&gt;username - 연결을 위한 유저 이름&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;왼쪽 아래 저장버튼을 눌러 원격지 등록 완료!&lt;/p&gt;

&lt;h3 id=&quot;jenkins-on-use--2---ci----&quot;&gt;Jenkins on use -2 : 프로젝트 빌드(CI) 이후 원격지로 실제 배포하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;각자 프로젝트  선택 &amp;gt; 구성 &amp;gt; Build탭의 add build step &amp;gt; send files or execute commands over SSH&lt;/strong&gt;
&lt;img src=&quot;/assets/img/jenkins/jenkins_002.PNG&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;접속 이후 수행동작 작성하기&lt;/strong&gt;
&lt;img src=&quot;/assets/img/jenkins/jenkins_003.PNG&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section&quot;&gt;항목들  설명&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;SSH Server - Name - 사전 설정과정에서 등록한 서버의 이름&lt;/li&gt;
  &lt;li&gt;Transfes
    &lt;ul&gt;
      &lt;li&gt;Source files : 젠킨스 서버에서 빌드 완료된 배포파일(전송할 배포파일)&lt;/li&gt;
      &lt;li&gt;Exec command : 배포파일 실행 명령&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;저장을 눌러 배포 설정 완료하고,&lt;/p&gt;

&lt;p&gt;빌드 수행!&lt;/p&gt;
</description>
        <pubDate>Wed, 04 Dec 2019 08:07:01 +0900</pubDate>
        <link>http://lee95292.github.io/devops/2019/12/04/Jenkins-_publishOverSSL.html</link>
        <guid isPermaLink="true">http://lee95292.github.io/devops/2019/12/04/Jenkins-_publishOverSSL.html</guid>
        
        
        <category>devops</category>
        
      </item>
    
  </channel>
</rss>
