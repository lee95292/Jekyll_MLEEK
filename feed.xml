<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mleek's blog</title>
    <description>Mleek's blog_ study note &amp; daily life
</description>
    <link>http://lee95292.github.io/</link>
    <atom:link href="http://lee95292.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 26 Aug 2019 15:49:21 +0900</pubDate>
    <lastBuildDate>Mon, 26 Aug 2019 15:49:21 +0900</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>[INTG Project] 개념이 잘 정리된 링크| 테크블로그| 공식 Document 모음</title>
        <description>&lt;p&gt;Spring boot - cloud - database - frontend - devops -security&lt;/p&gt;

&lt;p&gt;웹 서비스를 위한 폭넓은 개발스택을 갖추길 희망합니다.&lt;/p&gt;

&lt;p&gt;저만을 위한 링크북 인덱스이지만, 비슷한 목표를 가진분들이 참고하시면 좋을것 같습니다.&lt;/p&gt;

&lt;h1 id=&quot;section&quot;&gt;개념이 잘 정리된 링크&lt;/h1&gt;
&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;OS/Linux/Windows
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.lesstif.com/pages/viewpage.action?pageId=26083916#id-%EB%B0%B0%EC%8B%9C%EC%85%B8%EC%8A%A4%ED%81%AC%ED%8C%81%ED%8A%B8%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D(bashshellscriptprogramming)-Forloop%EC%82%AC%EC%9A%A9&quot;&gt;쉘 스크립트 제어문&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;웹
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://blog.outsider.ne.kr/1160&quot;&gt;JWT 개념&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://all-record.tistory.com/186&quot;&gt;우분투환경에서 단순 배포하기_W&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;기타
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://heropy.blog/2017/09/30/markdown/&quot;&gt;Markdown 문법&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;document&quot;&gt;공식 Document&lt;/h1&gt;
&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com&quot;&gt;도커&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://kubernetes.io/ko/docs/home/&quot;&gt;k8s(한글)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.spring.io/&quot;&gt;Spring&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://kgmyh.github.io/blog/2017/12/02/spring-boot-chapter01/&quot;&gt;spring boot(한글)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/&quot;&gt;Java8 API&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.android.com&quot;&gt;Android&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;section-1&quot;&gt;기업| 개인 기술블로그&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;사실 &lt;a href=&quot;https://medium.com/@Dongmin_Jang/%EC%97%85%EC%B2%B4%EB%B3%84-%EA%B8%B0%EC%88%A0-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%A6%AC%EC%8A%A4%ED%8A%B8-e2d736d0e658&quot;&gt;테크블로그는 여기&lt;/a&gt;에 다 정리되어있다. 내가 자주보는 한글 블로그 위주로 모았다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://d2.naver.com/home&quot;&gt;네이버 D2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tech.kakao.com/&quot;&gt;카카오 기술블로그&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/coupang-tech&quot;&gt;쿠팡 기술블로그&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://xguru.net/&quot;&gt;구루(권정혁님) 기술블로그&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Tue, 13 Aug 2019 14:46:00 +0900</pubDate>
        <link>http://lee95292.github.io/%ED%95%98%EB%82%98%EB%A1%9C_%EC%A0%95%EB%A6%AC%ED%95%98%EA%B8%B0/2019/08/13/INTG_TheoryLink-TheoryLink.html</link>
        <guid isPermaLink="true">http://lee95292.github.io/%ED%95%98%EB%82%98%EB%A1%9C_%EC%A0%95%EB%A6%AC%ED%95%98%EA%B8%B0/2019/08/13/INTG_TheoryLink-TheoryLink.html</guid>
        
        
        <category>하나로_정리하기</category>
        
      </item>
    
      <item>
        <title>[BoostCourse] PJ3 BackEnd 강의 정리(Spring MCV 실습 및 레이어드 아키텍쳐)</title>
        <description>&lt;p&gt;&lt;em&gt;작성중인 포스트입니다&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;실습을 따라하는 과정을 포스팅하는 것은 의미없다고 생각했습니다.&lt;/p&gt;

&lt;p&gt;내용이 많아 강사님이 자세히 설명하시지 않았지만 스프링을 처음 접하는 입장에서 그냥 넘어가기에는 찝찝한 부분들이 꽤나 있는것 같습니다.&lt;/p&gt;

&lt;p&gt;능동적으로 코드를 작성하기 위해 소스코드를 분석해보고, 관련 정보들을 기록하려 합니다.&lt;/p&gt;

&lt;p&gt;(레이어드 아키텍처 실습부분은 따라가기만으로도 벅차서, 완성도 있는 정리할 여유가 있을지 모르겠습니다..)&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;애너테이션&lt;/h3&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;@Datasource&lt;/li&gt;
  &lt;li&gt;@Bean&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;bean을 정의하는 어노테이션&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;@ComponentScan&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;@Controller, @Service, @Repository, @Component 어노테이션이 붙은 클래스를 찾아 컨테이너에 등록&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;@Component&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;컴포넌트 스캔의 대상이 되는 애노테이션 중 하나로써 주로 유틸, 기타 지원 클래스에 붙이는 어노테이션&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;@Autowired&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;주입 대상이되는 bean을 컨테이너에 찾아 주입하는 어노테이션&lt;/p&gt;
</description>
        <pubDate>Sun, 21 Jul 2019 21:00:00 +0900</pubDate>
        <link>http://lee95292.github.io/boostcourse/2019/07/21/Boostcourse-PJ3_Backend_Spring2.html</link>
        <guid isPermaLink="true">http://lee95292.github.io/boostcourse/2019/07/21/Boostcourse-PJ3_Backend_Spring2.html</guid>
        
        
        <category>boostcourse</category>
        
      </item>
    
      <item>
        <title>[BoostCourse] PJ3 BackEnd 강의 정리(Spring 개요)</title>
        <description>&lt;h2 id=&quot;spring&quot;&gt;Spring이란?&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;엔터프라이즈급 웹 어플리케이션을 제작하기 위한 솔루션. AOP, IoC, DI, 선언적 트랜잭션등 여러 기능을 제공하며,&lt;/p&gt;

&lt;p&gt;이들의 모듈화된 부분들을 사용할 수 있도록 설계된 프레임워크.&lt;/p&gt;

&lt;p&gt;여기서 프레임워크란, 라이브러리와는 확연한 차이가 있다.&lt;/p&gt;

&lt;p&gt;강의에서는 라이브러리와 프레임워크를 원재료와 반제품으로 묘사하였다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;라이브러리 - 자주 사용하는 기능들을 함수 또는 기능으로 제작하여, 컴파일 타임에 링킹되는 소스코드(또는 기능)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;프레임워크 - 자주 사용되는 기능이나 기본적인 실행환경 및 구조를 제공한다. (Spring에서는 DI,IoC,AOP etc..)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A 라이브러리 사용한 프로그램이 어떤 종류의 프로그램인지 알지 못하지만–&amp;gt;’원재료 비유’,&lt;/p&gt;

&lt;p&gt;B 프레임워크에서 동작하는 프로그램은 어떤 프로그램인지 알 수 있다. –&amp;gt; ‘반제품 비유’
BCI : 실행시간에 .class 바이트코드 수정&lt;/p&gt;

&lt;h2 id=&quot;spring-framework---&quot;&gt;Spring Framework의 모듈 및 특징&lt;/h2&gt;

&lt;h3 id=&quot;aop-instrumentation&quot;&gt;&lt;strong&gt;AOP와 Instrumentation&lt;/strong&gt;&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;AOP가 뭔데?&lt;/strong&gt; __important&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.naver.com/kyh31126/221496146885&quot;&gt;AOP_링크&lt;/a&gt; - 자세한 AOP 설명은 여기에서 많이 참고했다.&lt;/p&gt;

&lt;p&gt;Aspect Oriented Programming 직역하면 관점지향 프로그래밍인데, 이는 비즈니스 로직과 공통 모듈을 구분하여, 비즈니스 로직에 공통 모듈을 삽입하는 개발 방법이다.&lt;/p&gt;

&lt;p&gt;대표적으로 메소드의 성능을 검사할 때, 비즈니스 로직에 System.currentTimeMills() 메서드를 삽입해 성능을 측정하는 방법이 있지만, AOP를 이용해 해당 로직 밖에서 성능 측정코드를 삽입하는 AOP방법이 사용된다.&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;spring-AOP - AOP얼라이언스와 호환되는 방법으로 AOP지원&lt;/li&gt;
  &lt;li&gt;spring-aspects - AspectJ와의 통합 제공 (AspectJ는 BCI 제공 툴)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Spring의 AOP에는 &lt;a href=&quot;https://ukja.tistory.com/17&quot;&gt;BCI(Btye Code Instrumentation)&lt;/a&gt; 이라는 기술이 핵심적으로 사용된다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;spring-instrument&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;messaging&quot;&gt;&lt;strong&gt;Messaging&lt;/strong&gt;&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;메시지란, 네트워크에서 컴퓨터간 일반 통신을 의미.&lt;/p&gt;

&lt;p&gt;spring-messaging - 스프링4에서는 메시지 기반 어플리케이션을 작성하기 위해 Message, MessageChannel, MessageHadler, 메시지 매핑 어노테이션 제공&lt;/p&gt;

&lt;h3 id=&quot;data-access-integration&quot;&gt;&lt;strong&gt;Data Access/ Integration&lt;/strong&gt;&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;spring-jdbc, spring-tx(선언적 트랜잭션 관리), spring-orm(JPA,JDO,Hibernate), spring-oxm, spring-jms&lt;/p&gt;

&lt;h3 id=&quot;web&quot;&gt;&lt;strong&gt;Web&lt;/strong&gt;&lt;/h3&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;spring-web - 멀티파트 파일 업로드, 서블릿 리스너 등의 웹 지향 통합 기능 제공&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;spring-webmvc - webservlet모듈, SpringMVC 및 REST 웹서비스 구현 포함&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;spring-websocket - 웹소켓  지원&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;XML, java_config 설정부분&lt;/p&gt;

&lt;p&gt;Spring JDBC 부분&lt;/p&gt;

&lt;h2 id=&quot;spring-mvc--important&quot;&gt;Spring MVC  __important&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;MVC?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Model - View - Controller&lt;/p&gt;

&lt;p&gt;서비스에서 저장되는 데이터, 주문목록, 회원정보, 상품목록 자체를 &lt;strong&gt;Model&lt;/strong&gt;이라고 함.&lt;/p&gt;

&lt;p&gt;최종적으로 말단 기기에서 유저에게 보여지는 화면. 또는 화면을 렌더링하는 주체를 &lt;strong&gt;View라고&lt;/strong&gt; 함&lt;/p&gt;

&lt;p&gt;사용자의 요청에 의해 Model에서 비즈니스 로직을 거쳐 View를 만들기 까지의 액션을 수행하는 주체를 &lt;strong&gt;Controller&lt;/strong&gt;라고 함&lt;/p&gt;

&lt;p&gt;웹 상에서 MVC  구조는 몇 단계의 발전을 이뤄왔다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/boostcourse/mvc.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위 MVC 구조에서는 JSP Page 내에 html과 java 코드가 섞여있어 유지/보수가 힘들었다.&lt;/p&gt;

&lt;p&gt;뷰를 담당하는 영역과 컨트롤을 담당하는 영역이 혼재되어 있어, 한사람이 본다면 문제가 없겠지만,&lt;/p&gt;

&lt;p&gt;뷰와 컨트롤을 담당하는 사람이 분리된 프로젝트의 경우 상당한 불편함을 초래했다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/boostcourse/mvc1.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;MVC2 구조에서는 요청을 servlet이 받아, Controll 작업을 수행해, 로직과 뷰를 분리하였다.&lt;/p&gt;

&lt;p&gt;이는 다음과 같은 장점을 갖는다&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;관리 및 테스트의 용이&lt;/li&gt;
  &lt;li&gt;확장성 증가&lt;/li&gt;
  &lt;li&gt;관심사의 효과적인 분리&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/boostcourse/mvc2.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위의 MVC2 발전형태에서는, Front Controller가 요청을 받고, 또 다른 Controller 클래스가 요청을 위임받는다.&lt;/p&gt;

&lt;p&gt;이를 ControllerClass, HandlerClass라고 한다.&lt;/p&gt;

&lt;h3 id=&quot;spring-mvc-&quot;&gt;Spring MVC 구성요소&lt;/h3&gt;

&lt;p&gt;Spring은 model2 아키텍처로 구현되어 있음.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/boostcourse/springmvc.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;mvc---important&quot;&gt;&lt;strong&gt;mvc 동작순서&lt;/strong&gt;  __important&lt;/h3&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;HandlerMapping객체 통해 어떤 Controller가 동작할 것인지 Mapping 조회 (자바 config or xml) –&amp;gt;2&lt;/li&gt;
  &lt;li&gt;Handler Adapter를 통해 실행할 Controller에게 실행 요청 –&amp;gt;3,4&lt;/li&gt;
  &lt;li&gt;컨트롤러가 리턴하는 뷰를 DispatcherServlet에 전달–&amp;gt;5&lt;/li&gt;
  &lt;li&gt;View Resolver와 View 이름을 통해 뷰를 조회하고 –&amp;gt;6 뷰를 렌더링 후 응답 –&amp;gt;7,8&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;붉은색(보라색) 부분이 개발자가 구현하는 부분.&lt;/p&gt;

&lt;p&gt;초록색은 가끔씩 개발자가 구현하는 부분.&lt;/p&gt;

&lt;h3 id=&quot;dispatcherservlet-&quot;&gt;DispatcherServlet 동작과정&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/boostcourse/dpservlet.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;요청 선처리 작업 (뒷부분에서 추가설명)&lt;/li&gt;
  &lt;li&gt;HandelrExecutionChain 탐색&lt;/li&gt;
  &lt;li&gt;HandlerExecutionChain 결정 –&amp;gt; 없으면 404에러 출력&lt;/li&gt;
  &lt;li&gt;HandelrAdapter 결정 –&amp;gt;없다면 ServletException 발생&lt;/li&gt;
  &lt;li&gt;요청 처리&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;dispatcherservlet--1&quot;&gt;요청 선처리 작업 (DispatcherServlet) 동작과정&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/boostcourse/befrq.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Locale 결정 : Locale에 설정된 지역정보를 통해 지역화&lt;/li&gt;
  &lt;li&gt;RequestContextHolder에 요청 저장 : 요청을 받아 응답하기 이전까지 HTTPServlet Request, Response 객체를 저장함. –&amp;gt; 일반 빈에서 바로 선언해서 사용할 수 있도록 함&lt;/li&gt;
  &lt;li&gt;FlashMap 복원 : redirect로 파라미터 전달 시 URL을 복잡하게 하는부분들을 정리해주는 역할&lt;/li&gt;
  &lt;li&gt;멀티파트 요청인 경우,  요청 제어를 MultipartResolver로 넘김&lt;/li&gt;
  &lt;li&gt;핸들러 결정과 실행&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;dispatcherservlet---&quot;&gt;DispatcherServlet &amp;gt; 요청처리 과정&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/boostcourse/handreq.png&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 08 Jul 2019 21:00:00 +0900</pubDate>
        <link>http://lee95292.github.io/boostcourse/2019/07/08/BoostCourse-PJ3_Backend_Spring.html</link>
        <guid isPermaLink="true">http://lee95292.github.io/boostcourse/2019/07/08/BoostCourse-PJ3_Backend_Spring.html</guid>
        
        
        <category>boostcourse</category>
        
      </item>
    
      <item>
        <title>[BoostCourse] PJ3 FrontEnd 강의 정리 -2</title>
        <description>&lt;h3 id=&quot;css-javascript-animation&quot;&gt;CSS와 Javascript에서의 Animation&lt;/h3&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;Animation?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;반복적인 움직임의 처리! 간단하고 규칙적인 움직임은 CSS3의 transition, transform 속성으로 처리 가능하며, javascript보다 좋은 성능을 보장함.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;javascript Animation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;복잡하고 정밀한 애니메이션을 표현하기 위해 주로 사용&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;setInterval, setTimeout, requestAnimationFrame, Animations API 등을 활용할 수 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;하지만, setInterval같은 경우 애니메이션 구현에 사용되지 않음.
&lt;img src=&quot;/assets/img/boostcourse/setinterval.png&quot; /&gt;
위 그림에서 설명하는 “지연문제” 때문인데, 부스트코스에서는 이를 “제 때 일어나야 할 이벤트 콜백이 지연/사라지는 현상”이라고 설명했음.&lt;/p&gt;

&lt;p&gt;자세한 설명은 &lt;a href=&quot;https://javascript.info/settimeout-setinterval&quot;&gt;Javascript_Event_Scheduling&lt;/a&gt;에서 확인.&lt;/p&gt;

&lt;h3 id=&quot;javascript-requestanimationframe&quot;&gt;Javascript의 requestAnimationFrame&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;위 상황처럼, setTimeout,setInterval은 애니매이션을 위해 최적화되지 않음. animation 주기가 16.6ms 미만으로 내려갈 경우, 불필요한 frame이 생기기 때문임.&lt;/p&gt;

&lt;p&gt;이에 대한 대안으로 &lt;strong&gt;requestAnimationFrame&lt;/strong&gt;이 탄생함.
사용법은 setTimeout과 크게 다르지 않은듯.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;.mynode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nl&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;relative&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;mynode&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        testyest
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'.mynode'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0px&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;px&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;requestAnimationFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;requestAnimationFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;css3-transition&quot;&gt;CSS3 transition&lt;/h3&gt;

&lt;p&gt;GPU 가속을 이용하는 CSS 속성들을 사용하면 
Javascript로 구현하는 것보다 더 빠르다고 알려짐!&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;transform:translateXX();&lt;/li&gt;
  &lt;li&gt;transform:scale();&lt;/li&gt;
  &lt;li&gt;transform: rotate();&lt;/li&gt;
  &lt;li&gt;opacity&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;transition 으로 변화시킬 속성과 변화 시간을 지정할 수 있음&lt;/p&gt;

&lt;p&gt;transition [property] [duration] [timing-function] [delay]&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;transform&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;transition&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;transform&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;2s&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Thu, 04 Jul 2019 21:00:00 +0900</pubDate>
        <link>http://lee95292.github.io/boostcourse/2019/07/04/BoostCourse-PJ3-1_Front_2.html</link>
        <guid isPermaLink="true">http://lee95292.github.io/boostcourse/2019/07/04/BoostCourse-PJ3-1_Front_2.html</guid>
        
        
        <category>boostcourse</category>
        
      </item>
    
      <item>
        <title>[BoostCourse] PJ3 FrontEnd 강의 정리 -1</title>
        <description>&lt;h3 id=&quot;javascript-&quot;&gt;javascript 배열&lt;/h3&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;선언 : new Array()를 통해서 가능하지만, 보통 a = [] 처럼 간단히 선언&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;모든 데이터타입이 들어갈 수 있다. (객체, 함수, null 등등 )&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;sa&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;      &lt;span class=&quot;c1&quot;&gt;// 101 출력&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;javascript---&quot;&gt;javascript 배열의 유용한 메서드들&lt;/h3&gt;

&lt;hr /&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;push - a.push(10); //a=[10], 배열에 순차적으로 원소 삽입,pop도 있음&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;indexof - a.indexof(10);  // =0, 특정원소가 존재하는 인덱스 반환.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;concat - a=a.concat(1,2,3) //a=[1,2,3,10] 배열에 원소 이어붙임, (이어붙인 배열을 반환).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;join - a=a.join() // =”1,2,3,10” 배열을 문자열로 합친 후 반환.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;join,concat같은 경우, 실행시 배열의 내용이 직접 바뀌지 않고, 수행된 값을 반환하는 작업만을 함에 유의하자.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;배열탐색&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;foreach(function(v,i)) : v,i를 각각 value, index에 파싱하여 function에 해당하는 내용 루프돌며 실행한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;map(function(v,i)) :  function의 리턴값들의 배열을 리턴합니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-javascirpt&quot;&gt;var newArr = [&quot;apple&quot;,&quot;tomato&quot;].map(function(value, index) {
   return index + &quot;번째 과일은 &quot; + value + &quot;입니다&quot;;
});
console.log(newArr)     //문자열 배열로 리턴
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;javascript--1&quot;&gt;javascript 객체&lt;/h3&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;key, value로 이루어진 js의 대표적인  자료구조 .(온점)을 통해 접근.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;,(콤마)를 통해 속성을 구분, :(콜론) 을 통해 키/벨류를 바인딩.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;for-in 문을 사용하여 순회.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Object.keys() - 오브젝트의 키로 이루어진 배열 반환&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Object.keys()로도 객체 순회 가능&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'a'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'b'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;myName&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;객체의 속성 추가는 접근방법과 같다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;속성 제거에는 delete 키워드를 통해 가능하다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;mleek&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;//name 속성 생성&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;delete&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;//name속성 제거&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;실습 1.&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;https://gist.github.com/nigayo/ade2c3f74417fc202c8097214c965f27&quot;&gt;링크&lt;/a&gt; 에서, 숫자타입의 키값들만 출력하기.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;findTypeKeys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;object&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;findTypeKeys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;findTypeKeys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;number&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;실습 2.&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;https://gist.github.com/nigayo/a9a118977f82780441db664d6785efe3&quot;&gt;링크&lt;/a&gt; 에서, “type”키 값이 “sk”인것의 name 출력하기&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;findPropAttr&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;object&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;findPropAttr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sk&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;dom-node--dom-api&quot;&gt;DOM Node 조작하기 (DOM API)&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;https://www.w3schools.com/jsref/dom_obj_document.asp&quot;&gt;Document노드_API&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.w3schools.com/jsref/dom_obj_all.asp&quot;&gt;Elements노드_API&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;DOM 엘리먼트 속성&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;tagName : 엘리먼트 태그명 변환&lt;/li&gt;
  &lt;li&gt;textContent&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;### DOM API로 Node 조작 실습&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;실습 1.
 지금 나온 DOM API를 사용해서, strawberry 아래에 새로운 과일을 하나 더 추가하시오.&lt;/p&gt;

&lt;p&gt;추가 된 이후에는 다시 삭제하시오.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/boostcourse/pr01.JPG&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ul'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;addNode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'li'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;textNode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createTextNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'pineapple'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;addNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;textNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;removeChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;노드 생성 후, setTimeout 메서드를 통해 1초 후 지우는 동작 수행&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;실습2 &amp;amp; 실습 3&lt;/p&gt;

&lt;p&gt;insertBefore메서드를 사용해서, orange와  banana 사이에 새로운 과일을 추가하시오.&lt;/p&gt;

&lt;p&gt;실습2를 insertAdjacentHTML메서드를 사용해서, orange와 banana 사이에 새로운 과일을 추가하시오.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/boostcourse/pr023.JPG&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fruitNode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'li'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fruitText&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createTextNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'water mellon'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;fruitNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fruitText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ul'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;insertBefore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fruitNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;childNodes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;fruitNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;insertAdjacentHTML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'afterend'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'orange'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;참고링크 
&lt;a href=&quot;https://developer.mozilla.org/ko/docs/Web/API/Node/insertBefore&quot;&gt;insertBefore_Docuemnt&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/ko/docs/Web/API/Element/insertAdjacentHTML&quot;&gt;insertAdjacentHTML_Document&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;실습4&lt;/p&gt;

&lt;p&gt;apple을 grape 와 strawberry 사이로 옮기시오.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/boostcourse/pr04.JPG&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ul'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;childNodes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;grp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;childNodes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;removeChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;insertBefore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;grp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;실습5&lt;/p&gt;

&lt;p&gt;class 가 ‘red’인 노드만 삭제하시오.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/boostcourse/pr05.JPG&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ul'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelectorAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ul&amp;gt;li.red'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;rm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;removeChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;실습6&lt;/p&gt;

&lt;p&gt;section 태그의 자손 중에 blue라는 클래스를 가지고 있는 노드가 있다면, 그 하위에 있는 h2 노드를 삭제하시오.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/boostcourse/pr06.JPG&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sec&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelectorAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'section'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;sec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;blueNode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelectorAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'.blue'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;blueNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;blueNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelectorAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'h2'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Tue, 26 Mar 2019 21:00:00 +0900</pubDate>
        <link>http://lee95292.github.io/boostcourse/2019/03/26/BoostCourse-PJ3-1_Front.html</link>
        <guid isPermaLink="true">http://lee95292.github.io/boostcourse/2019/03/26/BoostCourse-PJ3-1_Front.html</guid>
        
        
        <category>boostcourse</category>
        
      </item>
    
      <item>
        <title>[INTG Project] SQL 구문 예제 및 문법 정리</title>
        <description>&lt;p&gt;SQL 하나로 정리하기 : INTG 프로젝트&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;목차&lt;/h3&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#select&quot;&gt;select&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#create&quot;&gt;create&lt;/a&gt;  //(&lt;a href=&quot;https://sqlzoo.net/wiki/CREATE_and_DROP_Reference&quot;&gt;https://sqlzoo.net/wiki/CREATE_and_DROP_Reference&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;레퍼런스&lt;/h3&gt;
&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://sqlzoo.net/&quot;&gt;SQLzoo&lt;/a&gt; :sql 예제 연습사이트&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tcpschool.com/mysql/intro&quot;&gt;TCPschool&lt;/a&gt; : sql을 비롯한 여러가지 프로그래밍 언어 정리된 사이트&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a name=&quot;select&quot;&gt;select문&lt;/a&gt;&lt;/h1&gt;
&lt;hr /&gt;

&lt;h1 id=&quot;select-basics&quot;&gt;001 SELECT basics&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;1번 : 독일의 인구 찾기&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;population&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;world&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Germany'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;2번 IN 사용 :(스웨덴 ,노르웨이, 덴마크)의  이름, 인구 출력&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;population&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;world&lt;/span&gt; 
  &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Sweden'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Norway'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Denmark'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;3번 BETWEEN ~ AND 사용 - 인구가 20만~25만 사이 국가 이름,영토 출력&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;area&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;world&lt;/span&gt; 
  &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;area&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BETWEEN&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200000&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;250000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;select-name&quot;&gt;002 SELECT name&lt;/h1&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;pattern matching strings&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;1번  LIKE, multicharacter wildcard(%)사용&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;world&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Y%'&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- Y로 시작하는 이름&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;7번 LIKE,wildcard(%) 응용&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;world&lt;/span&gt; 
  &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'%a%a%a%'&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;-- a가 세번이상 들어가는 국가&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;8번 LIKE,single character wildcard(%) 사용&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;world&lt;/span&gt; 
  &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'_t'&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- 두 번째 글자가 t&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;12번 LIKE, CONCAT 사용&lt;/p&gt;
&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;world&lt;/span&gt; 
  &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;capital&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;' City'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;-- Mexico - Mexico City 같은 관계를 가진 수도 출력&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;15번 꽤 어려운 문제 - 수도가 국가이름의 확정인 경우, 국가이름과 확장된부분 출력&lt;/p&gt;
&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;REPLACE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;capital&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;extension&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;world&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;capital&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;' %'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
   &lt;span class=&quot;k&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;capital&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'-%'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1&gt;&lt;a name=&quot;create&quot;&gt;create문&lt;/a&gt;&lt;/h1&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;테이블 생성 제약조건&lt;/h3&gt;

&lt;hr /&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;NOT NULL : 해당 필드는 NULL 값을 저장할 수 없게 됩니다. INSERT 구문에서 해당 영역을 생략할 시, 기본값이 삽입됩니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;UNIQUE : 해당 필드는 서로 다른 값을 가져야만 합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;PRIMARY KEY : 해당 필드가 NOT NULL과 UNIQUE 제약 조건의 특징을 모두 가지게 됩니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;FOREIGN KEY : 하나의 테이블을 다른 테이블에 의존하게 만듭니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;DEFAULT : 해당 필드의 기본값을 설정합니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Mon, 04 Mar 2019 14:46:00 +0900</pubDate>
        <link>http://lee95292.github.io/%ED%95%98%EB%82%98%EB%A1%9C_%EC%A0%95%EB%A6%AC%ED%95%98%EA%B8%B0/2019/03/04/INTG_SQL-_SQLquery.html</link>
        <guid isPermaLink="true">http://lee95292.github.io/%ED%95%98%EB%82%98%EB%A1%9C_%EC%A0%95%EB%A6%AC%ED%95%98%EA%B8%B0/2019/03/04/INTG_SQL-_SQLquery.html</guid>
        
        
        <category>하나로_정리하기</category>
        
      </item>
    
      <item>
        <title>[INTG Project] 프로그래밍 언어, 프레임워크 Error Report</title>
        <description>&lt;p&gt;에러 리포트 하나로 정리하기 : INTG 프로젝트&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;목차&lt;/h3&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#js&quot;&gt;Javascript&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#eclipse&quot;&gt;Eclipse_Setting&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#spring&quot;&gt;Spring&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#maven&quot;&gt;Maven&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#java&quot;&gt;Java&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#git&quot;&gt;Git&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#python&quot;&gt;python&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#blog&quot;&gt;Jekyll/Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a name=&quot;js&quot;&gt;Javascript&lt;/a&gt;&lt;/h1&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;E001&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;에러 내용 - js파일이 html파일에 extern 형식으로 들어가 있을때,  getElementsBy… 에서는 작동하지만, querySelectorAll는 작동하지 않는다.&lt;/p&gt;

&lt;p&gt;즉, 특정한 자바스크립트 코드가 작동하지 않는다.&lt;/p&gt;

&lt;p&gt;해결 방법 : script의 로딩하는 태그를 html문서의 맨 뒤로 넣어보자!&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;추측) Dom tree가 만들어지기 전에 쿼리셀렉터를 작동시키면 동작하지 않는다. &lt;del&gt;괜히 쿼리셀렉터가 반환하는 Node에 문제가 있는줄 알았다.&lt;/del&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;&lt;a name=&quot;eclipse&quot;&gt;Eclipse_Setting&lt;/a&gt;&lt;/h1&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이클립스의 경우 수정사항이 제대로 바뀌지 않았을 때가 있다. 이럴 땐,&lt;/p&gt;

&lt;p&gt;project &amp;gt; clean을 수행해주자.  잘못된, 꼬인 설정들을 정리해준다. &lt;a href=&quot;https://huelet.tistory.com/entry/%EC%9D%B4%ED%81%B4%EB%A6%BD%EC%8A%A4-%ED%81%B4%EB%A6%B0clean%EA%B8%B0%EB%8A%A5&quot;&gt;Eclipse_clean기능&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;이클립스에서 톰캣을 사용하는 경우에도 분명 실행되어야 하는 코드가 에러를 발생시킬 때,&lt;/p&gt;

&lt;p&gt;구동 서버에서 프로젝트를 삭제하고 다시 실행시키자. (servers &amp;gt; project 우클릭, remove)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;E001&lt;/strong&gt; ,Dynamic Web project
 —&lt;/p&gt;

&lt;p&gt;에러내용 - The superclass “javax.servlet.http.HttpServlet” was not found on the Java Build Path&lt;/p&gt;

&lt;p&gt;빌드패스에서 서블릿클래스가 없어졌다!&lt;/p&gt;

&lt;p&gt;이럴 땐, Project &amp;gt; properties &amp;gt; Project Facet 에서, Runtime 탭에 들어간다.&lt;/p&gt;

&lt;p&gt;WAS, 서버 Runtime을 잘 설정해준다. (J2EE, Apache 서버에 체크해줌)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;추측) 서블릿관련 클래스들은, 아파치서버에 있거나, J2EE라는 WAS에 존재하는 듯 하다. (너무 당연한 추측이다.)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;E002&lt;/strong&gt; Eclipse 서버구동 타임아웃 에러&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;“Starting Tomcat v&lt;em&gt;.0 Server at localhost’ has encountered a problem.
Server Tomcat v&lt;/em&gt;.0 Server at localhost was unable to start within 45 seconds. If the server requires more time, try increasing the timeout in the server editor.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;아파치-톰캣 서버를 런타임으로 설정하면, 기본 타임아웃 세팅이 45초로 지정되어있음.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;시작하는데 45초까진 안걸렸는데 오류를 출력하고 서버시작 실패&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;해결 - 서버탭 의 해당서버 우클릭 &amp;gt; open &amp;gt; 서버 설정창 내에서, timeout 탭 &amp;gt; strat timeout 시간을 늘려준다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;E003&lt;/strong&gt; Server Tomcat vX.X Server at localhost failed to start 에러&lt;/p&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;Server Tomcat v&lt;em&gt;.&lt;/em&gt; Server at localhost failed to start&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;대화상자에는 저렇게만 표시되고 아무런 오류메시지가 없음&lt;/p&gt;

&lt;p&gt;해결방법&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;JRE 설정&lt;/li&gt;
  &lt;li&gt;유일한 URL Mapping 사용&lt;/li&gt;
  &lt;li&gt;tomcat 자체 실행확인&lt;/li&gt;
  &lt;li&gt;Project-Java Build Path 의 Server Library[tomcat 버전] 설치&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;&lt;a name=&quot;spring&quot;&gt;Spring&lt;/a&gt;&lt;/h1&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a name=&quot;maven&quot;&gt;Maven&lt;/a&gt;&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;E001&lt;/strong&gt; java.lang.ClassNotFoundException : org.springframework.web.servlet.DispatcherServlet&lt;/p&gt;

&lt;p&gt;pom.xml에 의존성 추가 후, Maven Library 탭에서도 (org.springframework.web.servlet.DispatcherServlet)의 존재가 확인되지만, 런타임에서 해당 클래스 로딩 오류 발생!&lt;/p&gt;

&lt;p&gt;해결 방법   &lt;a href=&quot;https://crunchify.com/how-to-fix-java-lang-classnotfoundexception-org-springframework-web-servlet-dispatcherservlet-exception-spring-mvc-tomcat-and-404-error/&quot;&gt;링크&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;project 우클릭 &amp;gt; properties&lt;/li&gt;
  &lt;li&gt;Deployment Assembly 탭&lt;/li&gt;
  &lt;li&gt;add.. 버튼&lt;/li&gt;
  &lt;li&gt;Java BuildPath Entries 선택&lt;/li&gt;
  &lt;li&gt;maven dependency 추가 후 적용
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;E002&lt;/strong&gt; Maven Unknown&lt;/p&gt;

&lt;p&gt;git에서 spring 프로젝트를 clone했는데 pom.xml에서 에러발생.&lt;/p&gt;

&lt;p&gt;에러로그를 확인 : Unknown….. 구글링 결과&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;maven-jar-plugin.version&amp;gt;&lt;/span&gt;3.1.1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/maven-jar-plugin.version&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;properties context에 위 문구를 추가해주면 에러가 지워진다.&lt;/p&gt;

&lt;h1&gt;&lt;a name=&quot;Java&quot;&gt;Java&lt;/a&gt;&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;E001&lt;/strong&gt; Description	Resource	Path	Location	Type
Java compiler level does not match the version of the installed Java project facet.	MySchool		Unknown	Faceted Project Problem (Java Version Mismatch)&lt;/p&gt;

&lt;p&gt;해결방법&lt;/p&gt;

&lt;p&gt;project &amp;gt; properties &amp;gt; project facet에서의 자바 버전과,&lt;/p&gt;

&lt;p&gt;project &amp;gt; properties &amp;gt; java compiler 에서의 자바 버전을 동일하게 설정해주자.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1&gt;&lt;a name=&quot;git&quot;&gt;Git&lt;/a&gt;&lt;/h1&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1&gt;&lt;a name=&quot;python&quot;&gt;Python&lt;/a&gt;&lt;/h1&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1&gt;&lt;a name=&quot;blog&quot;&gt;Jekyll/Blog&lt;/a&gt;&lt;/h1&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lib/bundler/runtime.rb:319:in `check_for_activated_spec!': 
You have already activated addressable 2.5.2, 
but your Gemfile requires addressable 2.4.0. Prepending `bundle exec` 
to your command may solve this.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;테마 변경을 위해, 해당테마에서 jekyll build 수행 시 위와 같은 에러 발생.&lt;/p&gt;

&lt;p&gt;prepending bundle exec, 즉, 수행구문 앞에 bundle exec 붙여주면 해결됨&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;해결방법&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;bundle exec jekyll build&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;bundle exec jekyll serve&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Mon, 04 Mar 2019 14:46:00 +0900</pubDate>
        <link>http://lee95292.github.io/%ED%95%98%EB%82%98%EB%A1%9C_%EC%A0%95%EB%A6%AC%ED%95%98%EA%B8%B0/2019/03/04/INTG_Error-_Error-report.html</link>
        <guid isPermaLink="true">http://lee95292.github.io/%ED%95%98%EB%82%98%EB%A1%9C_%EC%A0%95%EB%A6%AC%ED%95%98%EA%B8%B0/2019/03/04/INTG_Error-_Error-report.html</guid>
        
        
        <category>하나로_정리하기</category>
        
      </item>
    
      <item>
        <title>[BoostCourse] PJ2 BackEnd 강의 정리</title>
        <description>&lt;h2 id=&quot;jsp-&quot;&gt;JSP 강의정리&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;Java Server Page, 자바 언어를 통해, 웹 페이지를 표시하는 기술&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;scope&quot;&gt;Scope란?&lt;/h1&gt;

&lt;hr /&gt;

&lt;p&gt;웹을 개발하면서 사용할 변수들에 대해, 유지되는 범위(scope)를 의미한다.&lt;/p&gt;

&lt;p&gt;page &amp;gt; request &amp;gt; session &amp;gt; application 의 포함관계가 있다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;page-scope&quot;&gt;page scope&lt;/h1&gt;

&lt;hr /&gt;

&lt;p&gt;서블릿의 PageContext&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;pageContext 내장객체 사용(jsp)&lt;/li&gt;
  &lt;li&gt;웹 페이지가 실행되는 동안 사용됨 (forward시, 내장객체 사라짐)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;request-scope&quot;&gt;request scope&lt;/h1&gt;

&lt;hr /&gt;

&lt;p&gt;서블릿의 HttpServeltRequest&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;request 내장객체 사용(jsp), set,get Attribute 메서드, 디스패쳐 메서드 존재&lt;/li&gt;
  &lt;li&gt;요청이 들어오고 응답이 나갈 때 까지 사용됨&lt;/li&gt;
  &lt;li&gt;페이지가 이동하는 forward에서도 객체 유지됨&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;session-scope&quot;&gt;session scope&lt;/h1&gt;

&lt;hr /&gt;

&lt;p&gt;서블릿의 HttpSession&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;세션이 유지되는 동안 객체 유지됨, session 내장객체(jsp) 사용&lt;/li&gt;
  &lt;li&gt;set,get Attribute 메서드 존재&lt;/li&gt;
  &lt;li&gt;클라이언트(browser) 별로 변수 관리&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;application-scope&quot;&gt;application scope&lt;/h1&gt;

&lt;hr /&gt;

&lt;p&gt;서블릿의 ServletContext&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;여러 개의 클라이언트들이 값을 공유, application 내장객체(jsp) 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;expression-language&quot;&gt;Expression Language&lt;/h1&gt;

&lt;hr /&gt;

&lt;p&gt;EL은, 값을 표현하는 데 사용되는 스크립트언어로서 JSP 문법을 보완하는 역할을 하며, 기능은 다음과 같다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;JSP의 스코프에 맞는 속성 사용&lt;/li&gt;
  &lt;li&gt;집합 객체에 대한 접근 방법 제공&lt;/li&gt;
  &lt;li&gt;수치, 관계, 논리 연산자 제공&lt;/li&gt;
  &lt;li&gt;자바 클래스 메서드 호출 기능 제공&lt;/li&gt;
  &lt;li&gt;EL만의 기본객체 제공&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;표현언어의 사용방법&lt;/h2&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;expression&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;위의 기본예제와 같이, $달러 옆의 {}중괄호 내에 표현식을 작성한다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-jsp&quot;&gt;&amp;lt;jsp:include page = &quot;/module/${skin.id}/header.jsp&quot; flush=&quot;true&quot;&amp;gt;
&amp;lt;b&amp;gt;${sessionScope.member.id}&amp;lt;/b&amp;gt;님 환영합니다.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;jsp로 작성된 EL 예제&lt;/p&gt;

&lt;p&gt;표현언어가 제공하는 기본객체는 아래와 같다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;pageContext&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;pageScope, requestScope, sessionScope, applicationScope - 기본객체에 저장된 &lt;strong&gt;속성-값&lt;/strong&gt; 매핑을 저장한 Map 객체&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;param - 요청 파라미터의 &lt;strong&gt;파라미터이름-값&lt;/strong&gt; 매핑을 저장한 Map 객체&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;paramValues - 요청 파라미터의 값들을 &lt;strong&gt;파라미터이름 - 값배열&lt;/strong&gt; 매핑을 저장한 Map 객체&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;header - 요청정보의 헤더이름-값 매핑을 저장한 Map 객체&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;headerValues - 위 관계와 동일&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;cookie - 쿠키이름 - 쿠키 매핑저장&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;initParam - 초기화 파라미터의 이름- 값 매핑 저장&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;jstl---jsp-standard-tag-library&quot;&gt;JSTL - JSP Standard Tag Library&lt;/h1&gt;

&lt;p&gt;생략&lt;/p&gt;

&lt;h1 id=&quot;database&quot;&gt;DataBase&lt;/h1&gt;

&lt;p&gt;데이터베이스는 따로 Mysql 설치, 문법 예제 연습 의 2개 시리즈의 포스팅으로 나누어 작성&lt;/p&gt;
</description>
        <pubDate>Sun, 24 Feb 2019 21:00:00 +0900</pubDate>
        <link>http://lee95292.github.io/boostcourse/2019/02/24/BoostCourse-_BackEnd_2.html</link>
        <guid isPermaLink="true">http://lee95292.github.io/boostcourse/2019/02/24/BoostCourse-_BackEnd_2.html</guid>
        
        
        <category>boostcourse</category>
        
      </item>
    
      <item>
        <title>[BoostCourse] PJ2 Javascript 강의 정리</title>
        <description>&lt;h1 id=&quot;javascript-&quot;&gt;javascript 수강내용&lt;/h1&gt;

&lt;h1 id=&quot;section&quot;&gt;변수와 연산자&lt;/h1&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;변수 선언 / 연산자 / Type 종류 / Type 확인&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;section-1&quot;&gt;변수&lt;/h2&gt;

&lt;p&gt;변수의 선언은 &lt;strong&gt;var, let, const&lt;/strong&gt; 키워드를 통해 선언할 수 있음.&lt;/p&gt;

&lt;p&gt;각자 선언 방법에 따라 유효범위(scope)가 달라진다.&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;선언방법&lt;/h3&gt;
&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;var&lt;/strong&gt; - Function Scope, 함수 단위의 유효범위를 가진다.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;재선언&lt;/strong&gt;과 &lt;strong&gt;재할당&lt;/strong&gt;이 가능하다.&lt;/li&gt;
      &lt;li&gt;선언 예약어를 지정하지 않을 시, 기본으로 지정된다.&lt;/li&gt;
      &lt;li&gt;즉, i =3 과  var i = 3은 같은 문장이다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;const&lt;/strong&gt; - Block Scope, 중괄호 단위의 유효범위를 가진다.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;재선언과 재할당이 불가능하다. 상수를 선언하는 키워드임&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;즉, 값이 변경되지 않는다.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;let&lt;/strong&gt; - Block Scope, 중괄호 단위의 유효범위를 가진다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;scope는&lt;/strong&gt; 쉽게 말해, 변수가 지역변수가 될 수 있는 조건을 의미한다.&lt;/p&gt;

&lt;p&gt;각각이 중괄호, 함수 내에 선언되면 지역변수가 되고, 그렇지 않으면 전역변수이다.&lt;/p&gt;

&lt;p&gt;말은 이렇게 하지만, 정리하고있는 시점에서도 가끔씩 혼동이 온다..&lt;/p&gt;

&lt;p&gt;let,var,const에 대해 &lt;a href=&quot;https://blog.hanumoka.net/2018/09/21/javascript-20180921-javascript-var-let-const/&quot;&gt;잘 정리된 링크&lt;/a&gt;를 참고하자.&lt;/p&gt;

&lt;h2 id=&quot;section-3&quot;&gt;연산자&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;사칙연산(+,-,/,*), 나머지연산, 삼항연산은 다른 프로그래밍&lt;/p&gt;

&lt;p&gt;언어와 동일하므로 생략&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;비교연산자&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;비교연산에는 ==보다 ===를 사용한다.&lt;/p&gt;

&lt;p&gt;==으로 비교하는 경우, 좌항과 우항의 타입을 일치시킨 후 비교하고,&lt;/p&gt;

&lt;p&gt;===으로 비교하는 경우, 좌항과 우항의 타입까지 고려하여 비교한다.&lt;/p&gt;

&lt;p&gt;==으로 비교할 경우 고려하지 않은 결과로 인해 비교연산이 예측과 달라질 수 있다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;       &lt;span class=&quot;c1&quot;&gt;//true&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;===&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;      &lt;span class=&quot;c1&quot;&gt;//false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-4&quot;&gt;반복 (제어문)&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;비교 및 반복문에는, if, switch, while, for(for-each, for-of, for-in), Label, do-while문 등이 있습니다.&lt;/p&gt;

&lt;p&gt;c언어 학습자 기준으로 생소한 문법들만 정리해보겠습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Label - 보통 루프를 식별하기 위해 사용합니다. 식별한 루프문들에 대해, break, continue문들을 사용할 수 있습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;innerLoop&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;innerLoop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;       
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;for-in - 객체의 열거 속성을 통해 지정된 변수를 반복합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;window-settimeout&quot;&gt;Window 객체(setTimeout)&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;전역객체(window)에 속한 메서드는, 경고창을 띄워주는 alert, setTimeout이라는 메서드들이 있다. 이를 통해 비동기방식을 알아본다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;callback 함수란, 호출 즉시 실행되지 않거나 아예 실행되지 않을 수도 있는 함수이다. 호출한 대상(call)에서 되부름(callback)되기 때문에 callback이라고 부른다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;전역객체의 사용&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;           &lt;span class=&quot;c1&quot;&gt;//전역객체인 window 생략 가능&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;나는 2초마다&lt;/strong&gt; &lt;strong&gt;팝업&lt;/strong&gt; 알림창을 띄우는 프로그램을 작성해보았다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;     
   &lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;callback을 정확히 이해했다면, 이 코드는 작성자의 예상과 다르게 작동함을 알 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;위 프로그램은 10회 run 함수를 호출함과 동시에 setTimeout메서드를 10회 호출하고,&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;2초뒤에 10개의 알림메시지를 수행하는 코드로 callback된다.&lt;/p&gt;

&lt;p&gt;사실 2초에 한 번씩 알림을 호출하는 프로그램에는 콜백함수가 필요 없다&lt;/p&gt;

&lt;p&gt;(굳이 콜백을 써서 반복을 구현하려면, setInterval을 사용하면 된다고 한다.)&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;dom-queryselector&quot;&gt;DOM과 querySelector&lt;/h1&gt;

&lt;hr /&gt;

&lt;p&gt;HTML의 구조와 데이터를 이해하고, javascript로 이를 변경하는 방법에 대해 이해하기&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;브라우저는 HTML 코드를 DOM이라는 객체 형태의 모델로 저장한다. (DOM tree)&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;부연설명 - 태그 요소의 아이디, 클래스, 텍스트 등의 정보를 트리형태의 객체(Object)로 저장한다는 의미&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;//관련 이미지 추가&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;javascript-dom-api&quot;&gt;javascript의 DOM API&lt;/h3&gt;
&lt;hr /&gt;

&lt;p&gt;DOM, 즉 페이지 정보를 트리형태의 객체로 저장한 데이터에서&lt;/p&gt;

&lt;p&gt;일일이 javascript로 원하는 데이터를 추출하는 알고리즘을 짜는 것은 매우 복잡하다.&lt;/p&gt;

&lt;p&gt;이에 javascript에서는 DOM API를 제공한다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;.getElementById() - id 기반으로 정보를 찾습니다. 마찬가지로 Class나 Tag의 이름으로 찾는것도 가능&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Element.querySelector() - css의 selector를 기반으로 질의(query)합니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;section-5&quot;&gt;브라우저 이벤트&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;사용자로 인해 발생하는 많은 이벤트들은, 마우스 클릭, 스크롤, 이동 등등 여러 경우에 발생합니다.(키보드 등 다른 입력장치의 경우에도 마찬가지)&lt;/p&gt;

&lt;p&gt;이러한 이벤트 발생 정보를 통해 새로운 이벤트를 등록 할 수 있습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;이벤트 등록 표준 방법&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;se&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gogo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;//DOM 오브젝트 지정&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;se&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;click&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;evt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;evt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;: ouch&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;ajax&quot;&gt;AJAX&lt;/h1&gt;

&lt;hr /&gt;

&lt;p&gt;AJAX는 단일 기술에 대한 내용이 아니라, 웹에서 데이터를 갱신할 때, 브라우저 새로고침 없이 비동기적으로 컨텐츠를 변경시킬 때 사용하는 모든 기술을 의미합니다.&lt;/p&gt;

&lt;p&gt;기본 예제코드&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;oReq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;XMLHttpRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;oReq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;load&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;responseText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;oReq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;GET&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://www.exampleurl.com/example.html?data=data&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;    
&lt;span class=&quot;nx&quot;&gt;oReq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;XMLHttpRequest의 메서드 (oReq에서 사용된 메서드)&lt;/p&gt;

&lt;p&gt;open(TYPE, URL, ASYNC) - 요청객체의 커넥션을 생성&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;TYPE : get,post같은 요청 메서드&lt;/li&gt;
  &lt;li&gt;URL : 요청을 처리할 서버 URL&lt;/li&gt;
  &lt;li&gt;ASYNC : 비동기 -true, 동기 - false&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;send(DATA) - 서버로 요청을 전송&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;DATA : 요청 전송 시 HTTP의 body에 담길 데이터 전송. get요청이므로 null이 들어감.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;-끝&lt;/p&gt;
</description>
        <pubDate>Mon, 18 Feb 2019 21:00:00 +0900</pubDate>
        <link>http://lee95292.github.io/boostcourse/2019/02/18/BoostCourse-_FrontEnd_2.html</link>
        <guid isPermaLink="true">http://lee95292.github.io/boostcourse/2019/02/18/BoostCourse-_FrontEnd_2.html</guid>
        
        
        <category>boostcourse</category>
        
      </item>
    
      <item>
        <title>2019년 상반기 회고 및 계획</title>
        <description>&lt;p&gt;사실 “상반기” 회고라고 하기에는 하반기가 4개월밖에 안남아서 1학기 &amp;amp; 여름방학 회고 정도가 맞지 않을까 싶다.&lt;/p&gt;

&lt;p&gt;뭐 어쨌든 상반기는 상반기니까, 나의 2019년 상반기를 한 단어로 표현해본다면,&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;허둥지둥&lt;/strong&gt; 이다.&lt;/p&gt;

&lt;p&gt;나의 동기는 너무 가볍고 쉽게 이동한다. 우선순위가 정해져있지 않고, 행동의 기반이 깊지 않다.&lt;/p&gt;

&lt;p&gt;물론 힘빠져서 축 늘어져있는 언젠가보다야 낫겠지만, 나를 움직이는 동력이 커다란 돌을 움직일 수 있는 동력은 아닌것 같다.&lt;/p&gt;

&lt;p&gt;진행중이다가 내팽기쳐진 몇 가지 작은 프로젝트들에게 조의를 표하며 회고를 작성한다 :)&lt;/p&gt;

&lt;p&gt;이것이 어느정도 어쩔 수 없었던 이유는, 내 주변에서 여러가지 요구사항과 유혹들 있었고, 이것들을 처리하기 위해서는 내가 하던 일의 우선순위를 낮추고 요구사항을 처리해야 했었다.&lt;/p&gt;

&lt;p&gt;몇 가지 일을 처리하면서 체력이 떨어지고, 자꾸 누워있게 되고, 집중하지 못했다.&lt;/p&gt;

&lt;p&gt;이런 일들을 처리하면서 원하든 원치않든 어떤 종류의 능력의 상향이 있었지만, 내가 원하는 목표에 직접적으로 영향을 미칠지는 의문이다.&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;그래서 무엇을 했지?&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;*&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;무엇을 못했지?&lt;/h2&gt;
&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;내 블로그에 처참한 포스팅 흔적만 남아있는 네이버 부스트코스&lt;/li&gt;
  &lt;li&gt;sqld 자격증 공부&lt;/li&gt;
  &lt;li&gt;Openstack&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-2&quot;&gt;이제 어떤 일을 할 차례인지?&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;커다란 계획을 세우면 항상 작고 손쉬운, 새로운 일이 생겨난다.&lt;/p&gt;

&lt;p&gt;나는 커다란 계획에 겁먹고 잠시 쉬기 위해 쉬운 일을 잡고, 그 일을 끝내며&lt;/p&gt;

&lt;p&gt;“큰건 못했지만 이걸 잘 했으니 됐어, 내일까지는 좀 쉬자!” « 아주 익숙한 합리화이다.&lt;/p&gt;

&lt;p&gt;이번엔 커다란 돌을 작게 쪼개보려 한다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;1 커다란 돌 -  JClip 서비스 운영&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;1-1 작은 돌들 - 서비스 운영기술 : jcloud 서버올리기 &amp;gt; 도커 &amp;gt; git&lt;/li&gt;
  &lt;li&gt;1-2 작은 돌들 - 프로그래밍 스킬 : spring boot &amp;gt; sprint data jpa &amp;gt; spring security &amp;gt; elk stack or chart tools &amp;gt; log4j &amp;gt; Java &amp;gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;1-3 작은 돌들 -&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;2 중간 돌 - Serbia Korea Iac 업무처리&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;2-1 Kotlin 또는 Android 공부&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;3 중간 돌 - TOPCIT 정기평가 : 9.20&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 16 Feb 2019 18:46:00 +0900</pubDate>
        <link>http://lee95292.github.io/%ED%9A%8C%EA%B3%A0/2019/02/16/etc-2019-2Schedule.html</link>
        <guid isPermaLink="true">http://lee95292.github.io/%ED%9A%8C%EA%B3%A0/2019/02/16/etc-2019-2Schedule.html</guid>
        
        
        <category>회고</category>
        
      </item>
    
  </channel>
</rss>
